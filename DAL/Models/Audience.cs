//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("AudienceModel", "FK_Tutor_new_AcademicRank", "AcademicRank", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.Models.AcademicRank), "Tutor", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.Tutor), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK_Tutor_new_Appointment", "Appointment", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAL.Models.Appointment), "Tutor", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.Tutor), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK__aspnet_Me__Appli__21B6055D", "aspnet_Applications", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.Models.aspnet_Applications), "aspnet_Membership", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.aspnet_Membership), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK__aspnet_Ro__Appli__38996AB5", "aspnet_Applications", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.Models.aspnet_Applications), "aspnet_Roles", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.aspnet_Roles), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK__aspnet_Us__Appli__0DAF0CB0", "aspnet_Applications", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.Models.aspnet_Applications), "aspnet_Users", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.aspnet_Users), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK__aspnet_Me__UserI__22AA2996", "aspnet_Users", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.Models.aspnet_Users), "aspnet_Membership", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAL.Models.aspnet_Membership), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK_Profile_aspnet_Users", "aspnet_Users", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.Models.aspnet_Users), "Profile", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAL.Models.Profile), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK_Statistics_aspnet_Users", "aspnet_Users", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.Models.aspnet_Users), "Statistics", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.Statistics), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK_Audience_LampType", "LampType", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAL.Models.LampType), "Audience", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.Audience), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK_Audience_Map", "Map", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAL.Models.Map), "Audience", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.Audience), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK_AUDIENCE_REF_356_CATEGORY", "Category", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAL.Models.Category), "Audience", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.Audience), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK_AUDIENCE_REF_371_BUILDING", "Building", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAL.Models.Building), "Audience", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.Audience), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK_AUDIENCE_REF_377_STATE", "State", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAL.Models.State), "Audience", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.Audience), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK_AUDIENCE_REFERENCE_BEAUTY", "Beauty", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAL.Models.Beauty), "Audience", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.Audience), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK_Audience_Responsible", "Responsible", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAL.Models.Responsible), "Audience", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.Audience), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK_Audience_Subdivision", "Subdivision", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAL.Models.Subdivision), "Audience", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.Audience), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK_EQUIPMEN_REFERENCE_AUDIENCE", "Audience", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.Models.Audience), "Equipment", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.Equipment), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK_REPAIR_REFERENCE_AUDIENCE", "Audience", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.Models.Audience), "Repair", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.Repair), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK_TIMETABL_REFERENCE_AUDIENCE", "Audience", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAL.Models.Audience), "TimeTable", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.TimeTable), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK_Tutor_new_Degree", "Degree", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAL.Models.Degree), "Tutor", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.Tutor), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK_SubDivisionDiscipline_Discipline", "Discipline", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.Models.Discipline), "SubDivisionDiscipline", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.SubDivisionDiscipline), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK_TIMETABL_DISCIPLINE", "Discipline", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAL.Models.Discipline), "TimeTable", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.TimeTable), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK_Doc_Doc", "ObjectType", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAL.Models.ObjectType), "Doc", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.Doc), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK_Doc_DocType", "DocType", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAL.Models.DocType), "Doc", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.Doc), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK_Doc_File", "File", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAL.Models.File), "Doc", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.Doc), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK_SHEDULE_REFERENCE_EDUCATIO", "EducationForm", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAL.Models.EducationForm), "Shedule", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.Shedule), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK_TIMETABL_REFERENCE_EDUCATIO", "EducationKind", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAL.Models.EducationKind), "TimeTable", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.TimeTable), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK_EQUIPMEN_REFERENCE_EQUIPMEN", "EquipmentType", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAL.Models.EquipmentType), "Equipment", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.Equipment), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK_Estate_Estate", "Estate", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAL.Models.Estate), "Estate1", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.Estate), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK_TIMETABL_REFERENCE_ETIME", "ETime", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAL.Models.ETime), "TimeTable", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.TimeTable), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK_Statistics_EventType", "EventType", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.Models.EventType), "Statistics", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.Statistics), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK_Groups_Subdivision", "Subdivision", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAL.Models.Subdivision), "Groups", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.Groups), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK_SubGroup_Groups", "Groups", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAL.Models.Groups), "SubGroup", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.SubGroup), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK_Statistics_Section", "Section", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.Models.Section), "Statistics", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.Statistics), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK_SHEDULE_REFERENCE_SEM", "Sem", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAL.Models.Sem), "Shedule", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.Shedule), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK_SHEDULE_REFERENCE_SHEDULET", "SheduleType", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAL.Models.SheduleType), "Shedule", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.Shedule), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK_TIMETABL_REFERENCE_SHEDULE", "Shedule", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAL.Models.Shedule), "TimeTable", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.TimeTable), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK_Tutor_Subdivision", "Subdivision", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAL.Models.Subdivision), "Tutor", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.Tutor), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK_TIMETABL_REFERENCE_SUBGROUP", "SubGroup", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAL.Models.SubGroup), "TimeTable", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.TimeTable), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK_TIMETABL_REFERENCE_TUTOR", "Tutor", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAL.Models.Tutor), "TimeTable", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.TimeTable), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "FK_TIMETABL_REFERENCE_WEEKDAY", "WeekDay", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAL.Models.WeekDay), "TimeTable", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.TimeTable), true)]
[assembly: EdmRelationshipAttribute("AudienceModel", "aspnet_UsersInRoles", "aspnet_Roles", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.aspnet_Roles), "aspnet_Users", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.aspnet_Users))]
[assembly: EdmRelationshipAttribute("AudienceModel", "CategoryRole", "aspnet_Roles", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.aspnet_Roles), "Category", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Models.Category))]

#endregion

namespace DAL.Models
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class AudienceEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект AudienceEntities, используя строку соединения из раздела "AudienceEntities" файла конфигурации приложения.
        /// </summary>
        public AudienceEntities() : base("name=AudienceEntities", "AudienceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта AudienceEntities.
        /// </summary>
        public AudienceEntities(string connectionString) : base(connectionString, "AudienceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта AudienceEntities.
        /// </summary>
        public AudienceEntities(EntityConnection connection) : base(connection, "AudienceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<AcademicRank> AcademicRank
        {
            get
            {
                if ((_AcademicRank == null))
                {
                    _AcademicRank = base.CreateObjectSet<AcademicRank>("AcademicRank");
                }
                return _AcademicRank;
            }
        }
        private ObjectSet<AcademicRank> _AcademicRank;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Appointment> Appointment
        {
            get
            {
                if ((_Appointment == null))
                {
                    _Appointment = base.CreateObjectSet<Appointment>("Appointment");
                }
                return _Appointment;
            }
        }
        private ObjectSet<Appointment> _Appointment;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<aspnet_Applications> aspnet_Applications
        {
            get
            {
                if ((_aspnet_Applications == null))
                {
                    _aspnet_Applications = base.CreateObjectSet<aspnet_Applications>("aspnet_Applications");
                }
                return _aspnet_Applications;
            }
        }
        private ObjectSet<aspnet_Applications> _aspnet_Applications;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<aspnet_Membership> aspnet_Membership
        {
            get
            {
                if ((_aspnet_Membership == null))
                {
                    _aspnet_Membership = base.CreateObjectSet<aspnet_Membership>("aspnet_Membership");
                }
                return _aspnet_Membership;
            }
        }
        private ObjectSet<aspnet_Membership> _aspnet_Membership;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<aspnet_Roles> aspnet_Roles
        {
            get
            {
                if ((_aspnet_Roles == null))
                {
                    _aspnet_Roles = base.CreateObjectSet<aspnet_Roles>("aspnet_Roles");
                }
                return _aspnet_Roles;
            }
        }
        private ObjectSet<aspnet_Roles> _aspnet_Roles;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<aspnet_SchemaVersions> aspnet_SchemaVersions
        {
            get
            {
                if ((_aspnet_SchemaVersions == null))
                {
                    _aspnet_SchemaVersions = base.CreateObjectSet<aspnet_SchemaVersions>("aspnet_SchemaVersions");
                }
                return _aspnet_SchemaVersions;
            }
        }
        private ObjectSet<aspnet_SchemaVersions> _aspnet_SchemaVersions;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<aspnet_Users> aspnet_Users
        {
            get
            {
                if ((_aspnet_Users == null))
                {
                    _aspnet_Users = base.CreateObjectSet<aspnet_Users>("aspnet_Users");
                }
                return _aspnet_Users;
            }
        }
        private ObjectSet<aspnet_Users> _aspnet_Users;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Audience> Audience
        {
            get
            {
                if ((_Audience == null))
                {
                    _Audience = base.CreateObjectSet<Audience>("Audience");
                }
                return _Audience;
            }
        }
        private ObjectSet<Audience> _Audience;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Beauty> Beauty
        {
            get
            {
                if ((_Beauty == null))
                {
                    _Beauty = base.CreateObjectSet<Beauty>("Beauty");
                }
                return _Beauty;
            }
        }
        private ObjectSet<Beauty> _Beauty;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Building> Building
        {
            get
            {
                if ((_Building == null))
                {
                    _Building = base.CreateObjectSet<Building>("Building");
                }
                return _Building;
            }
        }
        private ObjectSet<Building> _Building;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Category> Category
        {
            get
            {
                if ((_Category == null))
                {
                    _Category = base.CreateObjectSet<Category>("Category");
                }
                return _Category;
            }
        }
        private ObjectSet<Category> _Category;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Degree> Degree
        {
            get
            {
                if ((_Degree == null))
                {
                    _Degree = base.CreateObjectSet<Degree>("Degree");
                }
                return _Degree;
            }
        }
        private ObjectSet<Degree> _Degree;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Discipline> Discipline
        {
            get
            {
                if ((_Discipline == null))
                {
                    _Discipline = base.CreateObjectSet<Discipline>("Discipline");
                }
                return _Discipline;
            }
        }
        private ObjectSet<Discipline> _Discipline;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Doc> Doc
        {
            get
            {
                if ((_Doc == null))
                {
                    _Doc = base.CreateObjectSet<Doc>("Doc");
                }
                return _Doc;
            }
        }
        private ObjectSet<Doc> _Doc;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<DocType> DocType
        {
            get
            {
                if ((_DocType == null))
                {
                    _DocType = base.CreateObjectSet<DocType>("DocType");
                }
                return _DocType;
            }
        }
        private ObjectSet<DocType> _DocType;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<EducationForm> EducationForm
        {
            get
            {
                if ((_EducationForm == null))
                {
                    _EducationForm = base.CreateObjectSet<EducationForm>("EducationForm");
                }
                return _EducationForm;
            }
        }
        private ObjectSet<EducationForm> _EducationForm;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<EducationKind> EducationKind
        {
            get
            {
                if ((_EducationKind == null))
                {
                    _EducationKind = base.CreateObjectSet<EducationKind>("EducationKind");
                }
                return _EducationKind;
            }
        }
        private ObjectSet<EducationKind> _EducationKind;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Equipment> Equipment
        {
            get
            {
                if ((_Equipment == null))
                {
                    _Equipment = base.CreateObjectSet<Equipment>("Equipment");
                }
                return _Equipment;
            }
        }
        private ObjectSet<Equipment> _Equipment;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<EquipmentType> EquipmentType
        {
            get
            {
                if ((_EquipmentType == null))
                {
                    _EquipmentType = base.CreateObjectSet<EquipmentType>("EquipmentType");
                }
                return _EquipmentType;
            }
        }
        private ObjectSet<EquipmentType> _EquipmentType;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Estate> Estate
        {
            get
            {
                if ((_Estate == null))
                {
                    _Estate = base.CreateObjectSet<Estate>("Estate");
                }
                return _Estate;
            }
        }
        private ObjectSet<Estate> _Estate;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ETime> ETime
        {
            get
            {
                if ((_ETime == null))
                {
                    _ETime = base.CreateObjectSet<ETime>("ETime");
                }
                return _ETime;
            }
        }
        private ObjectSet<ETime> _ETime;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<EventType> EventType
        {
            get
            {
                if ((_EventType == null))
                {
                    _EventType = base.CreateObjectSet<EventType>("EventType");
                }
                return _EventType;
            }
        }
        private ObjectSet<EventType> _EventType;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Faculty> Faculty
        {
            get
            {
                if ((_Faculty == null))
                {
                    _Faculty = base.CreateObjectSet<Faculty>("Faculty");
                }
                return _Faculty;
            }
        }
        private ObjectSet<Faculty> _Faculty;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<File> File
        {
            get
            {
                if ((_File == null))
                {
                    _File = base.CreateObjectSet<File>("File");
                }
                return _File;
            }
        }
        private ObjectSet<File> _File;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Groups> Groups
        {
            get
            {
                if ((_Groups == null))
                {
                    _Groups = base.CreateObjectSet<Groups>("Groups");
                }
                return _Groups;
            }
        }
        private ObjectSet<Groups> _Groups;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<LampType> LampType
        {
            get
            {
                if ((_LampType == null))
                {
                    _LampType = base.CreateObjectSet<LampType>("LampType");
                }
                return _LampType;
            }
        }
        private ObjectSet<LampType> _LampType;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Map> Map
        {
            get
            {
                if ((_Map == null))
                {
                    _Map = base.CreateObjectSet<Map>("Map");
                }
                return _Map;
            }
        }
        private ObjectSet<Map> _Map;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<News> News
        {
            get
            {
                if ((_News == null))
                {
                    _News = base.CreateObjectSet<News>("News");
                }
                return _News;
            }
        }
        private ObjectSet<News> _News;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ObjectType> ObjectType
        {
            get
            {
                if ((_ObjectType == null))
                {
                    _ObjectType = base.CreateObjectSet<ObjectType>("ObjectType");
                }
                return _ObjectType;
            }
        }
        private ObjectSet<ObjectType> _ObjectType;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Profile> Profile
        {
            get
            {
                if ((_Profile == null))
                {
                    _Profile = base.CreateObjectSet<Profile>("Profile");
                }
                return _Profile;
            }
        }
        private ObjectSet<Profile> _Profile;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Repair> Repair
        {
            get
            {
                if ((_Repair == null))
                {
                    _Repair = base.CreateObjectSet<Repair>("Repair");
                }
                return _Repair;
            }
        }
        private ObjectSet<Repair> _Repair;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Responsible> Responsible
        {
            get
            {
                if ((_Responsible == null))
                {
                    _Responsible = base.CreateObjectSet<Responsible>("Responsible");
                }
                return _Responsible;
            }
        }
        private ObjectSet<Responsible> _Responsible;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Section> Section
        {
            get
            {
                if ((_Section == null))
                {
                    _Section = base.CreateObjectSet<Section>("Section");
                }
                return _Section;
            }
        }
        private ObjectSet<Section> _Section;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Sem> Sem
        {
            get
            {
                if ((_Sem == null))
                {
                    _Sem = base.CreateObjectSet<Sem>("Sem");
                }
                return _Sem;
            }
        }
        private ObjectSet<Sem> _Sem;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Shedule> Shedule
        {
            get
            {
                if ((_Shedule == null))
                {
                    _Shedule = base.CreateObjectSet<Shedule>("Shedule");
                }
                return _Shedule;
            }
        }
        private ObjectSet<Shedule> _Shedule;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<SheduleType> SheduleType
        {
            get
            {
                if ((_SheduleType == null))
                {
                    _SheduleType = base.CreateObjectSet<SheduleType>("SheduleType");
                }
                return _SheduleType;
            }
        }
        private ObjectSet<SheduleType> _SheduleType;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<State> State
        {
            get
            {
                if ((_State == null))
                {
                    _State = base.CreateObjectSet<State>("State");
                }
                return _State;
            }
        }
        private ObjectSet<State> _State;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Statistics> Statistics
        {
            get
            {
                if ((_Statistics == null))
                {
                    _Statistics = base.CreateObjectSet<Statistics>("Statistics");
                }
                return _Statistics;
            }
        }
        private ObjectSet<Statistics> _Statistics;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Stream> Stream
        {
            get
            {
                if ((_Stream == null))
                {
                    _Stream = base.CreateObjectSet<Stream>("Stream");
                }
                return _Stream;
            }
        }
        private ObjectSet<Stream> _Stream;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Subdivision> Subdivision
        {
            get
            {
                if ((_Subdivision == null))
                {
                    _Subdivision = base.CreateObjectSet<Subdivision>("Subdivision");
                }
                return _Subdivision;
            }
        }
        private ObjectSet<Subdivision> _Subdivision;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Subdivision_old> Subdivision_old
        {
            get
            {
                if ((_Subdivision_old == null))
                {
                    _Subdivision_old = base.CreateObjectSet<Subdivision_old>("Subdivision_old");
                }
                return _Subdivision_old;
            }
        }
        private ObjectSet<Subdivision_old> _Subdivision_old;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Subdivision_old_load> Subdivision_old_load
        {
            get
            {
                if ((_Subdivision_old_load == null))
                {
                    _Subdivision_old_load = base.CreateObjectSet<Subdivision_old_load>("Subdivision_old_load");
                }
                return _Subdivision_old_load;
            }
        }
        private ObjectSet<Subdivision_old_load> _Subdivision_old_load;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<SubDivisionDiscipline> SubDivisionDiscipline
        {
            get
            {
                if ((_SubDivisionDiscipline == null))
                {
                    _SubDivisionDiscipline = base.CreateObjectSet<SubDivisionDiscipline>("SubDivisionDiscipline");
                }
                return _SubDivisionDiscipline;
            }
        }
        private ObjectSet<SubDivisionDiscipline> _SubDivisionDiscipline;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<SubGroup> SubGroup
        {
            get
            {
                if ((_SubGroup == null))
                {
                    _SubGroup = base.CreateObjectSet<SubGroup>("SubGroup");
                }
                return _SubGroup;
            }
        }
        private ObjectSet<SubGroup> _SubGroup;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<sysdiagrams> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagrams>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagrams> _sysdiagrams;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<TimeTable> TimeTable
        {
            get
            {
                if ((_TimeTable == null))
                {
                    _TimeTable = base.CreateObjectSet<TimeTable>("TimeTable");
                }
                return _TimeTable;
            }
        }
        private ObjectSet<TimeTable> _TimeTable;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Tutor> Tutor
        {
            get
            {
                if ((_Tutor == null))
                {
                    _Tutor = base.CreateObjectSet<Tutor>("Tutor");
                }
                return _Tutor;
            }
        }
        private ObjectSet<Tutor> _Tutor;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Tutor_old> Tutor_old
        {
            get
            {
                if ((_Tutor_old == null))
                {
                    _Tutor_old = base.CreateObjectSet<Tutor_old>("Tutor_old");
                }
                return _Tutor_old;
            }
        }
        private ObjectSet<Tutor_old> _Tutor_old;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<WeekDay> WeekDay
        {
            get
            {
                if ((_WeekDay == null))
                {
                    _WeekDay = base.CreateObjectSet<WeekDay>("WeekDay");
                }
                return _WeekDay;
            }
        }
        private ObjectSet<WeekDay> _WeekDay;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet AcademicRank. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToAcademicRank(AcademicRank academicRank)
        {
            base.AddObject("AcademicRank", academicRank);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Appointment. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToAppointment(Appointment appointment)
        {
            base.AddObject("Appointment", appointment);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet aspnet_Applications. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToaspnet_Applications(aspnet_Applications aspnet_Applications)
        {
            base.AddObject("aspnet_Applications", aspnet_Applications);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet aspnet_Membership. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToaspnet_Membership(aspnet_Membership aspnet_Membership)
        {
            base.AddObject("aspnet_Membership", aspnet_Membership);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet aspnet_Roles. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToaspnet_Roles(aspnet_Roles aspnet_Roles)
        {
            base.AddObject("aspnet_Roles", aspnet_Roles);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet aspnet_SchemaVersions. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToaspnet_SchemaVersions(aspnet_SchemaVersions aspnet_SchemaVersions)
        {
            base.AddObject("aspnet_SchemaVersions", aspnet_SchemaVersions);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet aspnet_Users. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToaspnet_Users(aspnet_Users aspnet_Users)
        {
            base.AddObject("aspnet_Users", aspnet_Users);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Audience. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToAudience(Audience audience)
        {
            base.AddObject("Audience", audience);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Beauty. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToBeauty(Beauty beauty)
        {
            base.AddObject("Beauty", beauty);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Building. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToBuilding(Building building)
        {
            base.AddObject("Building", building);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Category. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToCategory(Category category)
        {
            base.AddObject("Category", category);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Degree. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToDegree(Degree degree)
        {
            base.AddObject("Degree", degree);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Discipline. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToDiscipline(Discipline discipline)
        {
            base.AddObject("Discipline", discipline);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Doc. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToDoc(Doc doc)
        {
            base.AddObject("Doc", doc);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet DocType. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToDocType(DocType docType)
        {
            base.AddObject("DocType", docType);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet EducationForm. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToEducationForm(EducationForm educationForm)
        {
            base.AddObject("EducationForm", educationForm);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet EducationKind. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToEducationKind(EducationKind educationKind)
        {
            base.AddObject("EducationKind", educationKind);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Equipment. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToEquipment(Equipment equipment)
        {
            base.AddObject("Equipment", equipment);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet EquipmentType. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToEquipmentType(EquipmentType equipmentType)
        {
            base.AddObject("EquipmentType", equipmentType);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Estate. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToEstate(Estate estate)
        {
            base.AddObject("Estate", estate);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ETime. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToETime(ETime eTime)
        {
            base.AddObject("ETime", eTime);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet EventType. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToEventType(EventType eventType)
        {
            base.AddObject("EventType", eventType);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Faculty. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToFaculty(Faculty faculty)
        {
            base.AddObject("Faculty", faculty);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet File. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToFile(File file)
        {
            base.AddObject("File", file);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Groups. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToGroups(Groups groups)
        {
            base.AddObject("Groups", groups);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet LampType. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToLampType(LampType lampType)
        {
            base.AddObject("LampType", lampType);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Map. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToMap(Map map)
        {
            base.AddObject("Map", map);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet News. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToNews(News news)
        {
            base.AddObject("News", news);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ObjectType. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToObjectType(ObjectType objectType)
        {
            base.AddObject("ObjectType", objectType);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Profile. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToProfile(Profile profile)
        {
            base.AddObject("Profile", profile);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Repair. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToRepair(Repair repair)
        {
            base.AddObject("Repair", repair);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Responsible. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToResponsible(Responsible responsible)
        {
            base.AddObject("Responsible", responsible);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Section. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToSection(Section section)
        {
            base.AddObject("Section", section);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Sem. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToSem(Sem sem)
        {
            base.AddObject("Sem", sem);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Shedule. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToShedule(Shedule shedule)
        {
            base.AddObject("Shedule", shedule);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet SheduleType. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToSheduleType(SheduleType sheduleType)
        {
            base.AddObject("SheduleType", sheduleType);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet State. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToState(State state)
        {
            base.AddObject("State", state);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Statistics. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToStatistics(Statistics statistics)
        {
            base.AddObject("Statistics", statistics);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Stream. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToStream(Stream stream)
        {
            base.AddObject("Stream", stream);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Subdivision. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToSubdivision(Subdivision subdivision)
        {
            base.AddObject("Subdivision", subdivision);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Subdivision_old. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToSubdivision_old(Subdivision_old subdivision_old)
        {
            base.AddObject("Subdivision_old", subdivision_old);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Subdivision_old_load. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToSubdivision_old_load(Subdivision_old_load subdivision_old_load)
        {
            base.AddObject("Subdivision_old_load", subdivision_old_load);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet SubDivisionDiscipline. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToSubDivisionDiscipline(SubDivisionDiscipline subDivisionDiscipline)
        {
            base.AddObject("SubDivisionDiscipline", subDivisionDiscipline);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet SubGroup. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToSubGroup(SubGroup subGroup)
        {
            base.AddObject("SubGroup", subGroup);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet sysdiagrams. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTosysdiagrams(sysdiagrams sysdiagrams)
        {
            base.AddObject("sysdiagrams", sysdiagrams);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet TimeTable. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTimeTable(TimeTable timeTable)
        {
            base.AddObject("TimeTable", timeTable);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Tutor. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTutor(Tutor tutor)
        {
            base.AddObject("Tutor", tutor);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Tutor_old. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTutor_old(Tutor_old tutor_old)
        {
            base.AddObject("Tutor_old", tutor_old);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet WeekDay. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToWeekDay(WeekDay weekDay)
        {
            base.AddObject("WeekDay", weekDay);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="AcademicRank")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AcademicRank : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта AcademicRank.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static AcademicRank CreateAcademicRank(global::System.Int32 id)
        {
            AcademicRank academicRank = new AcademicRank();
            academicRank.Id = id;
            return academicRank;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortTitle
        {
            get
            {
                return _ShortTitle;
            }
            set
            {
                OnShortTitleChanging(value);
                ReportPropertyChanging("ShortTitle");
                _ShortTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortTitle");
                OnShortTitleChanged();
            }
        }
        private global::System.String _ShortTitle;
        partial void OnShortTitleChanging(global::System.String value);
        partial void OnShortTitleChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_Tutor_new_AcademicRank", "Tutor")]
        public EntityCollection<Tutor> Tutor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tutor>("AudienceModel.FK_Tutor_new_AcademicRank", "Tutor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tutor>("AudienceModel.FK_Tutor_new_AcademicRank", "Tutor", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="Appointment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Appointment : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Appointment.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static Appointment CreateAppointment(global::System.Int32 id)
        {
            Appointment appointment = new Appointment();
            appointment.Id = id;
            return appointment;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_Tutor_new_Appointment", "Tutor")]
        public EntityCollection<Tutor> Tutor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tutor>("AudienceModel.FK_Tutor_new_Appointment", "Tutor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tutor>("AudienceModel.FK_Tutor_new_Appointment", "Tutor", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="aspnet_Applications")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Applications : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта aspnet_Applications.
        /// </summary>
        /// <param name="applicationName">Исходное значение свойства ApplicationName.</param>
        /// <param name="loweredApplicationName">Исходное значение свойства LoweredApplicationName.</param>
        /// <param name="applicationId">Исходное значение свойства ApplicationId.</param>
        public static aspnet_Applications Createaspnet_Applications(global::System.String applicationName, global::System.String loweredApplicationName, global::System.Guid applicationId)
        {
            aspnet_Applications aspnet_Applications = new aspnet_Applications();
            aspnet_Applications.ApplicationName = applicationName;
            aspnet_Applications.LoweredApplicationName = loweredApplicationName;
            aspnet_Applications.ApplicationId = applicationId;
            return aspnet_Applications;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicationName
        {
            get
            {
                return _ApplicationName;
            }
            set
            {
                OnApplicationNameChanging(value);
                ReportPropertyChanging("ApplicationName");
                _ApplicationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ApplicationName");
                OnApplicationNameChanged();
            }
        }
        private global::System.String _ApplicationName;
        partial void OnApplicationNameChanging(global::System.String value);
        partial void OnApplicationNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredApplicationName
        {
            get
            {
                return _LoweredApplicationName;
            }
            set
            {
                OnLoweredApplicationNameChanging(value);
                ReportPropertyChanging("LoweredApplicationName");
                _LoweredApplicationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredApplicationName");
                OnLoweredApplicationNameChanged();
            }
        }
        private global::System.String _LoweredApplicationName;
        partial void OnLoweredApplicationNameChanging(global::System.String value);
        partial void OnLoweredApplicationNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                if (_ApplicationId != value)
                {
                    OnApplicationIdChanging(value);
                    ReportPropertyChanging("ApplicationId");
                    _ApplicationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK__aspnet_Me__Appli__21B6055D", "aspnet_Membership")]
        public EntityCollection<aspnet_Membership> aspnet_Membership
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Membership>("AudienceModel.FK__aspnet_Me__Appli__21B6055D", "aspnet_Membership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Membership>("AudienceModel.FK__aspnet_Me__Appli__21B6055D", "aspnet_Membership", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK__aspnet_Ro__Appli__38996AB5", "aspnet_Roles")]
        public EntityCollection<aspnet_Roles> aspnet_Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Roles>("AudienceModel.FK__aspnet_Ro__Appli__38996AB5", "aspnet_Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Roles>("AudienceModel.FK__aspnet_Ro__Appli__38996AB5", "aspnet_Roles", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK__aspnet_Us__Appli__0DAF0CB0", "aspnet_Users")]
        public EntityCollection<aspnet_Users> aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Users>("AudienceModel.FK__aspnet_Us__Appli__0DAF0CB0", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Users>("AudienceModel.FK__aspnet_Us__Appli__0DAF0CB0", "aspnet_Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="aspnet_Membership")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Membership : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта aspnet_Membership.
        /// </summary>
        /// <param name="applicationId">Исходное значение свойства ApplicationId.</param>
        /// <param name="userId">Исходное значение свойства UserId.</param>
        /// <param name="password">Исходное значение свойства Password.</param>
        /// <param name="passwordFormat">Исходное значение свойства PasswordFormat.</param>
        /// <param name="passwordSalt">Исходное значение свойства PasswordSalt.</param>
        /// <param name="isApproved">Исходное значение свойства IsApproved.</param>
        /// <param name="isLockedOut">Исходное значение свойства IsLockedOut.</param>
        /// <param name="createDate">Исходное значение свойства CreateDate.</param>
        /// <param name="lastLoginDate">Исходное значение свойства LastLoginDate.</param>
        /// <param name="lastPasswordChangedDate">Исходное значение свойства LastPasswordChangedDate.</param>
        /// <param name="lastLockoutDate">Исходное значение свойства LastLockoutDate.</param>
        /// <param name="failedPasswordAttemptCount">Исходное значение свойства FailedPasswordAttemptCount.</param>
        /// <param name="failedPasswordAttemptWindowStart">Исходное значение свойства FailedPasswordAttemptWindowStart.</param>
        /// <param name="failedPasswordAnswerAttemptCount">Исходное значение свойства FailedPasswordAnswerAttemptCount.</param>
        /// <param name="failedPasswordAnswerAttemptWindowStart">Исходное значение свойства FailedPasswordAnswerAttemptWindowStart.</param>
        public static aspnet_Membership Createaspnet_Membership(global::System.Guid applicationId, global::System.Guid userId, global::System.String password, global::System.Int32 passwordFormat, global::System.String passwordSalt, global::System.Boolean isApproved, global::System.Boolean isLockedOut, global::System.DateTime createDate, global::System.DateTime lastLoginDate, global::System.DateTime lastPasswordChangedDate, global::System.DateTime lastLockoutDate, global::System.Int32 failedPasswordAttemptCount, global::System.DateTime failedPasswordAttemptWindowStart, global::System.Int32 failedPasswordAnswerAttemptCount, global::System.DateTime failedPasswordAnswerAttemptWindowStart)
        {
            aspnet_Membership aspnet_Membership = new aspnet_Membership();
            aspnet_Membership.ApplicationId = applicationId;
            aspnet_Membership.UserId = userId;
            aspnet_Membership.Password = password;
            aspnet_Membership.PasswordFormat = passwordFormat;
            aspnet_Membership.PasswordSalt = passwordSalt;
            aspnet_Membership.IsApproved = isApproved;
            aspnet_Membership.IsLockedOut = isLockedOut;
            aspnet_Membership.CreateDate = createDate;
            aspnet_Membership.LastLoginDate = lastLoginDate;
            aspnet_Membership.LastPasswordChangedDate = lastPasswordChangedDate;
            aspnet_Membership.LastLockoutDate = lastLockoutDate;
            aspnet_Membership.FailedPasswordAttemptCount = failedPasswordAttemptCount;
            aspnet_Membership.FailedPasswordAttemptWindowStart = failedPasswordAttemptWindowStart;
            aspnet_Membership.FailedPasswordAnswerAttemptCount = failedPasswordAnswerAttemptCount;
            aspnet_Membership.FailedPasswordAnswerAttemptWindowStart = failedPasswordAnswerAttemptWindowStart;
            return aspnet_Membership;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PasswordFormat
        {
            get
            {
                return _PasswordFormat;
            }
            set
            {
                OnPasswordFormatChanging(value);
                ReportPropertyChanging("PasswordFormat");
                _PasswordFormat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PasswordFormat");
                OnPasswordFormatChanged();
            }
        }
        private global::System.Int32 _PasswordFormat;
        partial void OnPasswordFormatChanging(global::System.Int32 value);
        partial void OnPasswordFormatChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordSalt
        {
            get
            {
                return _PasswordSalt;
            }
            set
            {
                OnPasswordSaltChanging(value);
                ReportPropertyChanging("PasswordSalt");
                _PasswordSalt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordSalt");
                OnPasswordSaltChanged();
            }
        }
        private global::System.String _PasswordSalt;
        partial void OnPasswordSaltChanging(global::System.String value);
        partial void OnPasswordSaltChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobilePIN
        {
            get
            {
                return _MobilePIN;
            }
            set
            {
                OnMobilePINChanging(value);
                ReportPropertyChanging("MobilePIN");
                _MobilePIN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobilePIN");
                OnMobilePINChanged();
            }
        }
        private global::System.String _MobilePIN;
        partial void OnMobilePINChanging(global::System.String value);
        partial void OnMobilePINChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoweredEmail
        {
            get
            {
                return _LoweredEmail;
            }
            set
            {
                OnLoweredEmailChanging(value);
                ReportPropertyChanging("LoweredEmail");
                _LoweredEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoweredEmail");
                OnLoweredEmailChanged();
            }
        }
        private global::System.String _LoweredEmail;
        partial void OnLoweredEmailChanging(global::System.String value);
        partial void OnLoweredEmailChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordQuestion
        {
            get
            {
                return _PasswordQuestion;
            }
            set
            {
                OnPasswordQuestionChanging(value);
                ReportPropertyChanging("PasswordQuestion");
                _PasswordQuestion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordQuestion");
                OnPasswordQuestionChanged();
            }
        }
        private global::System.String _PasswordQuestion;
        partial void OnPasswordQuestionChanging(global::System.String value);
        partial void OnPasswordQuestionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordAnswer
        {
            get
            {
                return _PasswordAnswer;
            }
            set
            {
                OnPasswordAnswerChanging(value);
                ReportPropertyChanging("PasswordAnswer");
                _PasswordAnswer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordAnswer");
                OnPasswordAnswerChanged();
            }
        }
        private global::System.String _PasswordAnswer;
        partial void OnPasswordAnswerChanging(global::System.String value);
        partial void OnPasswordAnswerChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private global::System.Boolean _IsApproved;
        partial void OnIsApprovedChanging(global::System.Boolean value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLockedOut
        {
            get
            {
                return _IsLockedOut;
            }
            set
            {
                OnIsLockedOutChanging(value);
                ReportPropertyChanging("IsLockedOut");
                _IsLockedOut = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLockedOut");
                OnIsLockedOutChanged();
            }
        }
        private global::System.Boolean _IsLockedOut;
        partial void OnIsLockedOutChanging(global::System.Boolean value);
        partial void OnIsLockedOutChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private global::System.DateTime _LastLoginDate;
        partial void OnLastLoginDateChanging(global::System.DateTime value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastPasswordChangedDate
        {
            get
            {
                return _LastPasswordChangedDate;
            }
            set
            {
                OnLastPasswordChangedDateChanging(value);
                ReportPropertyChanging("LastPasswordChangedDate");
                _LastPasswordChangedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPasswordChangedDate");
                OnLastPasswordChangedDateChanged();
            }
        }
        private global::System.DateTime _LastPasswordChangedDate;
        partial void OnLastPasswordChangedDateChanging(global::System.DateTime value);
        partial void OnLastPasswordChangedDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLockoutDate
        {
            get
            {
                return _LastLockoutDate;
            }
            set
            {
                OnLastLockoutDateChanging(value);
                ReportPropertyChanging("LastLockoutDate");
                _LastLockoutDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLockoutDate");
                OnLastLockoutDateChanged();
            }
        }
        private global::System.DateTime _LastLockoutDate;
        partial void OnLastLockoutDateChanging(global::System.DateTime value);
        partial void OnLastLockoutDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailedPasswordAttemptCount
        {
            get
            {
                return _FailedPasswordAttemptCount;
            }
            set
            {
                OnFailedPasswordAttemptCountChanging(value);
                ReportPropertyChanging("FailedPasswordAttemptCount");
                _FailedPasswordAttemptCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAttemptCount");
                OnFailedPasswordAttemptCountChanged();
            }
        }
        private global::System.Int32 _FailedPasswordAttemptCount;
        partial void OnFailedPasswordAttemptCountChanging(global::System.Int32 value);
        partial void OnFailedPasswordAttemptCountChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FailedPasswordAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAttemptWindowStart;
            }
            set
            {
                OnFailedPasswordAttemptWindowStartChanging(value);
                ReportPropertyChanging("FailedPasswordAttemptWindowStart");
                _FailedPasswordAttemptWindowStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAttemptWindowStart");
                OnFailedPasswordAttemptWindowStartChanged();
            }
        }
        private global::System.DateTime _FailedPasswordAttemptWindowStart;
        partial void OnFailedPasswordAttemptWindowStartChanging(global::System.DateTime value);
        partial void OnFailedPasswordAttemptWindowStartChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailedPasswordAnswerAttemptCount
        {
            get
            {
                return _FailedPasswordAnswerAttemptCount;
            }
            set
            {
                OnFailedPasswordAnswerAttemptCountChanging(value);
                ReportPropertyChanging("FailedPasswordAnswerAttemptCount");
                _FailedPasswordAnswerAttemptCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAnswerAttemptCount");
                OnFailedPasswordAnswerAttemptCountChanged();
            }
        }
        private global::System.Int32 _FailedPasswordAnswerAttemptCount;
        partial void OnFailedPasswordAnswerAttemptCountChanging(global::System.Int32 value);
        partial void OnFailedPasswordAnswerAttemptCountChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FailedPasswordAnswerAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAnswerAttemptWindowStart;
            }
            set
            {
                OnFailedPasswordAnswerAttemptWindowStartChanging(value);
                ReportPropertyChanging("FailedPasswordAnswerAttemptWindowStart");
                _FailedPasswordAnswerAttemptWindowStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
                OnFailedPasswordAnswerAttemptWindowStartChanged();
            }
        }
        private global::System.DateTime _FailedPasswordAnswerAttemptWindowStart;
        partial void OnFailedPasswordAnswerAttemptWindowStartChanging(global::System.DateTime value);
        partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK__aspnet_Me__Appli__21B6055D", "aspnet_Applications")]
        public aspnet_Applications aspnet_Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("AudienceModel.FK__aspnet_Me__Appli__21B6055D", "aspnet_Applications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("AudienceModel.FK__aspnet_Me__Appli__21B6055D", "aspnet_Applications").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Applications> aspnet_ApplicationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("AudienceModel.FK__aspnet_Me__Appli__21B6055D", "aspnet_Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Applications>("AudienceModel.FK__aspnet_Me__Appli__21B6055D", "aspnet_Applications", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK__aspnet_Me__UserI__22AA2996", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("AudienceModel.FK__aspnet_Me__UserI__22AA2996", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("AudienceModel.FK__aspnet_Me__UserI__22AA2996", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("AudienceModel.FK__aspnet_Me__UserI__22AA2996", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("AudienceModel.FK__aspnet_Me__UserI__22AA2996", "aspnet_Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="aspnet_Roles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Roles : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта aspnet_Roles.
        /// </summary>
        /// <param name="applicationId">Исходное значение свойства ApplicationId.</param>
        /// <param name="roleId">Исходное значение свойства RoleId.</param>
        /// <param name="roleName">Исходное значение свойства RoleName.</param>
        /// <param name="loweredRoleName">Исходное значение свойства LoweredRoleName.</param>
        public static aspnet_Roles Createaspnet_Roles(global::System.Guid applicationId, global::System.Guid roleId, global::System.String roleName, global::System.String loweredRoleName)
        {
            aspnet_Roles aspnet_Roles = new aspnet_Roles();
            aspnet_Roles.ApplicationId = applicationId;
            aspnet_Roles.RoleId = roleId;
            aspnet_Roles.RoleName = roleName;
            aspnet_Roles.LoweredRoleName = loweredRoleName;
            return aspnet_Roles;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Guid _RoleId;
        partial void OnRoleIdChanging(global::System.Guid value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredRoleName
        {
            get
            {
                return _LoweredRoleName;
            }
            set
            {
                OnLoweredRoleNameChanging(value);
                ReportPropertyChanging("LoweredRoleName");
                _LoweredRoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredRoleName");
                OnLoweredRoleNameChanged();
            }
        }
        private global::System.String _LoweredRoleName;
        partial void OnLoweredRoleNameChanging(global::System.String value);
        partial void OnLoweredRoleNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK__aspnet_Ro__Appli__38996AB5", "aspnet_Applications")]
        public aspnet_Applications aspnet_Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("AudienceModel.FK__aspnet_Ro__Appli__38996AB5", "aspnet_Applications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("AudienceModel.FK__aspnet_Ro__Appli__38996AB5", "aspnet_Applications").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Applications> aspnet_ApplicationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("AudienceModel.FK__aspnet_Ro__Appli__38996AB5", "aspnet_Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Applications>("AudienceModel.FK__aspnet_Ro__Appli__38996AB5", "aspnet_Applications", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "aspnet_UsersInRoles", "aspnet_Users")]
        public EntityCollection<aspnet_Users> aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Users>("AudienceModel.aspnet_UsersInRoles", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Users>("AudienceModel.aspnet_UsersInRoles", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "CategoryRole", "Category")]
        public EntityCollection<Category> Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Category>("AudienceModel.CategoryRole", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Category>("AudienceModel.CategoryRole", "Category", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="aspnet_SchemaVersions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_SchemaVersions : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта aspnet_SchemaVersions.
        /// </summary>
        /// <param name="feature">Исходное значение свойства Feature.</param>
        /// <param name="compatibleSchemaVersion">Исходное значение свойства CompatibleSchemaVersion.</param>
        /// <param name="isCurrentVersion">Исходное значение свойства IsCurrentVersion.</param>
        public static aspnet_SchemaVersions Createaspnet_SchemaVersions(global::System.String feature, global::System.String compatibleSchemaVersion, global::System.Boolean isCurrentVersion)
        {
            aspnet_SchemaVersions aspnet_SchemaVersions = new aspnet_SchemaVersions();
            aspnet_SchemaVersions.Feature = feature;
            aspnet_SchemaVersions.CompatibleSchemaVersion = compatibleSchemaVersion;
            aspnet_SchemaVersions.IsCurrentVersion = isCurrentVersion;
            return aspnet_SchemaVersions;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Feature
        {
            get
            {
                return _Feature;
            }
            set
            {
                if (_Feature != value)
                {
                    OnFeatureChanging(value);
                    ReportPropertyChanging("Feature");
                    _Feature = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Feature");
                    OnFeatureChanged();
                }
            }
        }
        private global::System.String _Feature;
        partial void OnFeatureChanging(global::System.String value);
        partial void OnFeatureChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompatibleSchemaVersion
        {
            get
            {
                return _CompatibleSchemaVersion;
            }
            set
            {
                if (_CompatibleSchemaVersion != value)
                {
                    OnCompatibleSchemaVersionChanging(value);
                    ReportPropertyChanging("CompatibleSchemaVersion");
                    _CompatibleSchemaVersion = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CompatibleSchemaVersion");
                    OnCompatibleSchemaVersionChanged();
                }
            }
        }
        private global::System.String _CompatibleSchemaVersion;
        partial void OnCompatibleSchemaVersionChanging(global::System.String value);
        partial void OnCompatibleSchemaVersionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCurrentVersion
        {
            get
            {
                return _IsCurrentVersion;
            }
            set
            {
                OnIsCurrentVersionChanging(value);
                ReportPropertyChanging("IsCurrentVersion");
                _IsCurrentVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCurrentVersion");
                OnIsCurrentVersionChanged();
            }
        }
        private global::System.Boolean _IsCurrentVersion;
        partial void OnIsCurrentVersionChanging(global::System.Boolean value);
        partial void OnIsCurrentVersionChanged();

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="aspnet_Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Users : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта aspnet_Users.
        /// </summary>
        /// <param name="applicationId">Исходное значение свойства ApplicationId.</param>
        /// <param name="userId">Исходное значение свойства UserId.</param>
        /// <param name="userName">Исходное значение свойства UserName.</param>
        /// <param name="loweredUserName">Исходное значение свойства LoweredUserName.</param>
        /// <param name="isAnonymous">Исходное значение свойства IsAnonymous.</param>
        /// <param name="lastActivityDate">Исходное значение свойства LastActivityDate.</param>
        public static aspnet_Users Createaspnet_Users(global::System.Guid applicationId, global::System.Guid userId, global::System.String userName, global::System.String loweredUserName, global::System.Boolean isAnonymous, global::System.DateTime lastActivityDate)
        {
            aspnet_Users aspnet_Users = new aspnet_Users();
            aspnet_Users.ApplicationId = applicationId;
            aspnet_Users.UserId = userId;
            aspnet_Users.UserName = userName;
            aspnet_Users.LoweredUserName = loweredUserName;
            aspnet_Users.IsAnonymous = isAnonymous;
            aspnet_Users.LastActivityDate = lastActivityDate;
            return aspnet_Users;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredUserName
        {
            get
            {
                return _LoweredUserName;
            }
            set
            {
                OnLoweredUserNameChanging(value);
                ReportPropertyChanging("LoweredUserName");
                _LoweredUserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredUserName");
                OnLoweredUserNameChanged();
            }
        }
        private global::System.String _LoweredUserName;
        partial void OnLoweredUserNameChanging(global::System.String value);
        partial void OnLoweredUserNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileAlias
        {
            get
            {
                return _MobileAlias;
            }
            set
            {
                OnMobileAliasChanging(value);
                ReportPropertyChanging("MobileAlias");
                _MobileAlias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileAlias");
                OnMobileAliasChanged();
            }
        }
        private global::System.String _MobileAlias;
        partial void OnMobileAliasChanging(global::System.String value);
        partial void OnMobileAliasChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAnonymous
        {
            get
            {
                return _IsAnonymous;
            }
            set
            {
                OnIsAnonymousChanging(value);
                ReportPropertyChanging("IsAnonymous");
                _IsAnonymous = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAnonymous");
                OnIsAnonymousChanged();
            }
        }
        private global::System.Boolean _IsAnonymous;
        partial void OnIsAnonymousChanging(global::System.Boolean value);
        partial void OnIsAnonymousChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK__aspnet_Us__Appli__0DAF0CB0", "aspnet_Applications")]
        public aspnet_Applications aspnet_Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("AudienceModel.FK__aspnet_Us__Appli__0DAF0CB0", "aspnet_Applications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("AudienceModel.FK__aspnet_Us__Appli__0DAF0CB0", "aspnet_Applications").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Applications> aspnet_ApplicationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("AudienceModel.FK__aspnet_Us__Appli__0DAF0CB0", "aspnet_Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Applications>("AudienceModel.FK__aspnet_Us__Appli__0DAF0CB0", "aspnet_Applications", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK__aspnet_Me__UserI__22AA2996", "aspnet_Membership")]
        public aspnet_Membership aspnet_Membership
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("AudienceModel.FK__aspnet_Me__UserI__22AA2996", "aspnet_Membership").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("AudienceModel.FK__aspnet_Me__UserI__22AA2996", "aspnet_Membership").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Membership> aspnet_MembershipReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("AudienceModel.FK__aspnet_Me__UserI__22AA2996", "aspnet_Membership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Membership>("AudienceModel.FK__aspnet_Me__UserI__22AA2996", "aspnet_Membership", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_Profile_aspnet_Users", "Profile")]
        public Profile Profile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("AudienceModel.FK_Profile_aspnet_Users", "Profile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("AudienceModel.FK_Profile_aspnet_Users", "Profile").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Profile> ProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("AudienceModel.FK_Profile_aspnet_Users", "Profile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Profile>("AudienceModel.FK_Profile_aspnet_Users", "Profile", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_Statistics_aspnet_Users", "Statistics")]
        public EntityCollection<Statistics> Statistics
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Statistics>("AudienceModel.FK_Statistics_aspnet_Users", "Statistics");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Statistics>("AudienceModel.FK_Statistics_aspnet_Users", "Statistics", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "aspnet_UsersInRoles", "aspnet_Roles")]
        public EntityCollection<aspnet_Roles> aspnet_Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Roles>("AudienceModel.aspnet_UsersInRoles", "aspnet_Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Roles>("AudienceModel.aspnet_UsersInRoles", "aspnet_Roles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="Audience")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Audience : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Audience.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="lock">Исходное значение свойства Lock.</param>
        /// <param name="signalSystem">Исходное значение свойства SignalSystem.</param>
        public static Audience CreateAudience(global::System.Int32 id, global::System.Boolean @lock, global::System.Boolean signalSystem)
        {
            Audience audience = new Audience();
            audience.Id = id;
            audience.Lock = @lock;
            audience.SignalSystem = signalSystem;
            return audience;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GraphId
        {
            get
            {
                return _GraphId;
            }
            set
            {
                OnGraphIdChanging(value);
                ReportPropertyChanging("GraphId");
                _GraphId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GraphId");
                OnGraphIdChanged();
            }
        }
        private Nullable<global::System.Int32> _GraphId;
        partial void OnGraphIdChanging(Nullable<global::System.Int32> value);
        partial void OnGraphIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BuildingId
        {
            get
            {
                return _BuildingId;
            }
            set
            {
                OnBuildingIdChanging(value);
                ReportPropertyChanging("BuildingId");
                _BuildingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BuildingId");
                OnBuildingIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BuildingId;
        partial void OnBuildingIdChanging(Nullable<global::System.Int32> value);
        partial void OnBuildingIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CategoryId;
        partial void OnCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubdivisionId
        {
            get
            {
                return _SubdivisionId;
            }
            set
            {
                OnSubdivisionIdChanging(value);
                ReportPropertyChanging("SubdivisionId");
                _SubdivisionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubdivisionId");
                OnSubdivisionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SubdivisionId;
        partial void OnSubdivisionIdChanging(Nullable<global::System.Int32> value);
        partial void OnSubdivisionIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResponsibleId
        {
            get
            {
                return _ResponsibleId;
            }
            set
            {
                OnResponsibleIdChanging(value);
                ReportPropertyChanging("ResponsibleId");
                _ResponsibleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResponsibleId");
                OnResponsibleIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ResponsibleId;
        partial void OnResponsibleIdChanging(Nullable<global::System.Int32> value);
        partial void OnResponsibleIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Area
        {
            get
            {
                return _Area;
            }
            set
            {
                OnAreaChanging(value);
                ReportPropertyChanging("Area");
                _Area = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Area");
                OnAreaChanged();
            }
        }
        private Nullable<global::System.Double> _Area;
        partial void OnAreaChanging(Nullable<global::System.Double> value);
        partial void OnAreaChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> AreaTP
        {
            get
            {
                return _AreaTP;
            }
            set
            {
                OnAreaTPChanging(value);
                ReportPropertyChanging("AreaTP");
                _AreaTP = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AreaTP");
                OnAreaTPChanged();
            }
        }
        private Nullable<global::System.Double> _AreaTP;
        partial void OnAreaTPChanging(Nullable<global::System.Double> value);
        partial void OnAreaTPChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NumTP
        {
            get
            {
                return _NumTP;
            }
            set
            {
                OnNumTPChanging(value);
                ReportPropertyChanging("NumTP");
                _NumTP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NumTP");
                OnNumTPChanged();
            }
        }
        private global::System.String _NumTP;
        partial void OnNumTPChanging(global::System.String value);
        partial void OnNumTPChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Length
        {
            get
            {
                return _Length;
            }
            set
            {
                OnLengthChanging(value);
                ReportPropertyChanging("Length");
                _Length = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Length");
                OnLengthChanged();
            }
        }
        private Nullable<global::System.Double> _Length;
        partial void OnLengthChanging(Nullable<global::System.Double> value);
        partial void OnLengthChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Width
        {
            get
            {
                return _Width;
            }
            set
            {
                OnWidthChanging(value);
                ReportPropertyChanging("Width");
                _Width = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Width");
                OnWidthChanged();
            }
        }
        private Nullable<global::System.Double> _Width;
        partial void OnWidthChanging(Nullable<global::System.Double> value);
        partial void OnWidthChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Height
        {
            get
            {
                return _Height;
            }
            set
            {
                OnHeightChanging(value);
                ReportPropertyChanging("Height");
                _Height = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Height");
                OnHeightChanged();
            }
        }
        private Nullable<global::System.Double> _Height;
        partial void OnHeightChanging(Nullable<global::System.Double> value);
        partial void OnHeightChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CapacityPotential
        {
            get
            {
                return _CapacityPotential;
            }
            set
            {
                OnCapacityPotentialChanging(value);
                ReportPropertyChanging("CapacityPotential");
                _CapacityPotential = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CapacityPotential");
                OnCapacityPotentialChanged();
            }
        }
        private Nullable<global::System.Int32> _CapacityPotential;
        partial void OnCapacityPotentialChanging(Nullable<global::System.Int32> value);
        partial void OnCapacityPotentialChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Capacity
        {
            get
            {
                return _Capacity;
            }
            set
            {
                OnCapacityChanging(value);
                ReportPropertyChanging("Capacity");
                _Capacity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Capacity");
                OnCapacityChanged();
            }
        }
        private Nullable<global::System.Int32> _Capacity;
        partial void OnCapacityChanging(Nullable<global::System.Int32> value);
        partial void OnCapacityChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Commitment
        {
            get
            {
                return _Commitment;
            }
            set
            {
                OnCommitmentChanging(value);
                ReportPropertyChanging("Commitment");
                _Commitment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Commitment");
                OnCommitmentChanged();
            }
        }
        private Nullable<global::System.Int32> _Commitment;
        partial void OnCommitmentChanging(Nullable<global::System.Int32> value);
        partial void OnCommitmentChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EquipmentCost
        {
            get
            {
                return _EquipmentCost;
            }
            set
            {
                OnEquipmentCostChanging(value);
                ReportPropertyChanging("EquipmentCost");
                _EquipmentCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EquipmentCost");
                OnEquipmentCostChanged();
            }
        }
        private Nullable<global::System.Int32> _EquipmentCost;
        partial void OnEquipmentCostChanging(Nullable<global::System.Int32> value);
        partial void OnEquipmentCostChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Lock
        {
            get
            {
                return _Lock;
            }
            set
            {
                OnLockChanging(value);
                ReportPropertyChanging("Lock");
                _Lock = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Lock");
                OnLockChanged();
            }
        }
        private global::System.Boolean _Lock;
        partial void OnLockChanging(global::System.Boolean value);
        partial void OnLockChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean SignalSystem
        {
            get
            {
                return _SignalSystem;
            }
            set
            {
                OnSignalSystemChanging(value);
                ReportPropertyChanging("SignalSystem");
                _SignalSystem = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SignalSystem");
                OnSignalSystemChanged();
            }
        }
        private global::System.Boolean _SignalSystem;
        partial void OnSignalSystemChanging(global::System.Boolean value);
        partial void OnSignalSystemChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ControlDate
        {
            get
            {
                return _ControlDate;
            }
            set
            {
                OnControlDateChanging(value);
                ReportPropertyChanging("ControlDate");
                _ControlDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ControlDate");
                OnControlDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ControlDate;
        partial void OnControlDateChanging(Nullable<global::System.DateTime> value);
        partial void OnControlDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StateId
        {
            get
            {
                return _StateId;
            }
            set
            {
                OnStateIdChanging(value);
                ReportPropertyChanging("StateId");
                _StateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StateId");
                OnStateIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StateId;
        partial void OnStateIdChanging(Nullable<global::System.Int32> value);
        partial void OnStateIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BeautyId
        {
            get
            {
                return _BeautyId;
            }
            set
            {
                OnBeautyIdChanging(value);
                ReportPropertyChanging("BeautyId");
                _BeautyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BeautyId");
                OnBeautyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BeautyId;
        partial void OnBeautyIdChanging(Nullable<global::System.Int32> value);
        partial void OnBeautyIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WorkingClass
        {
            get
            {
                return _WorkingClass;
            }
            set
            {
                OnWorkingClassChanging(value);
                ReportPropertyChanging("WorkingClass");
                _WorkingClass = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WorkingClass");
                OnWorkingClassChanged();
            }
        }
        private global::System.String _WorkingClass;
        partial void OnWorkingClassChanging(global::System.String value);
        partial void OnWorkingClassChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> WorkingClassDate
        {
            get
            {
                return _WorkingClassDate;
            }
            set
            {
                OnWorkingClassDateChanging(value);
                ReportPropertyChanging("WorkingClassDate");
                _WorkingClassDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkingClassDate");
                OnWorkingClassDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _WorkingClassDate;
        partial void OnWorkingClassDateChanging(Nullable<global::System.DateTime> value);
        partial void OnWorkingClassDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LampCount
        {
            get
            {
                return _LampCount;
            }
            set
            {
                OnLampCountChanging(value);
                ReportPropertyChanging("LampCount");
                _LampCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LampCount");
                OnLampCountChanged();
            }
        }
        private Nullable<global::System.Int32> _LampCount;
        partial void OnLampCountChanging(Nullable<global::System.Int32> value);
        partial void OnLampCountChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LampBrokenCount
        {
            get
            {
                return _LampBrokenCount;
            }
            set
            {
                OnLampBrokenCountChanging(value);
                ReportPropertyChanging("LampBrokenCount");
                _LampBrokenCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LampBrokenCount");
                OnLampBrokenCountChanged();
            }
        }
        private Nullable<global::System.Int32> _LampBrokenCount;
        partial void OnLampBrokenCountChanging(Nullable<global::System.Int32> value);
        partial void OnLampBrokenCountChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LampTypeId
        {
            get
            {
                return _LampTypeId;
            }
            set
            {
                OnLampTypeIdChanging(value);
                ReportPropertyChanging("LampTypeId");
                _LampTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LampTypeId");
                OnLampTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LampTypeId;
        partial void OnLampTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnLampTypeIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RepairDate
        {
            get
            {
                return _RepairDate;
            }
            set
            {
                OnRepairDateChanging(value);
                ReportPropertyChanging("RepairDate");
                _RepairDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RepairDate");
                OnRepairDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RepairDate;
        partial void OnRepairDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRepairDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RepairLength
        {
            get
            {
                return _RepairLength;
            }
            set
            {
                OnRepairLengthChanging(value);
                ReportPropertyChanging("RepairLength");
                _RepairLength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RepairLength");
                OnRepairLengthChanged();
            }
        }
        private Nullable<global::System.Int32> _RepairLength;
        partial void OnRepairLengthChanging(Nullable<global::System.Int32> value);
        partial void OnRepairLengthChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> RepairCost
        {
            get
            {
                return _RepairCost;
            }
            set
            {
                OnRepairCostChanging(value);
                ReportPropertyChanging("RepairCost");
                _RepairCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RepairCost");
                OnRepairCostChanged();
            }
        }
        private Nullable<global::System.Double> _RepairCost;
        partial void OnRepairCostChanging(Nullable<global::System.Double> value);
        partial void OnRepairCostChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RepairNote
        {
            get
            {
                return _RepairNote;
            }
            set
            {
                OnRepairNoteChanging(value);
                ReportPropertyChanging("RepairNote");
                _RepairNote = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RepairNote");
                OnRepairNoteChanged();
            }
        }
        private global::System.String _RepairNote;
        partial void OnRepairNoteChanging(global::System.String value);
        partial void OnRepairNoteChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WindowCount
        {
            get
            {
                return _WindowCount;
            }
            set
            {
                OnWindowCountChanging(value);
                ReportPropertyChanging("WindowCount");
                _WindowCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WindowCount");
                OnWindowCountChanged();
            }
        }
        private Nullable<global::System.Int32> _WindowCount;
        partial void OnWindowCountChanging(Nullable<global::System.Int32> value);
        partial void OnWindowCountChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NoteState
        {
            get
            {
                return _NoteState;
            }
            set
            {
                OnNoteStateChanging(value);
                ReportPropertyChanging("NoteState");
                _NoteState = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NoteState");
                OnNoteStateChanged();
            }
        }
        private global::System.String _NoteState;
        partial void OnNoteStateChanging(global::System.String value);
        partial void OnNoteStateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CapacityEmployee
        {
            get
            {
                return _CapacityEmployee;
            }
            set
            {
                OnCapacityEmployeeChanging(value);
                ReportPropertyChanging("CapacityEmployee");
                _CapacityEmployee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CapacityEmployee");
                OnCapacityEmployeeChanged();
            }
        }
        private Nullable<global::System.Int32> _CapacityEmployee;
        partial void OnCapacityEmployeeChanging(Nullable<global::System.Int32> value);
        partial void OnCapacityEmployeeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Floor
        {
            get
            {
                return _Floor;
            }
            set
            {
                OnFloorChanging(value);
                ReportPropertyChanging("Floor");
                _Floor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Floor");
                OnFloorChanged();
            }
        }
        private Nullable<global::System.Int32> _Floor;
        partial void OnFloorChanging(Nullable<global::System.Int32> value);
        partial void OnFloorChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> LengthTP
        {
            get
            {
                return _LengthTP;
            }
            set
            {
                OnLengthTPChanging(value);
                ReportPropertyChanging("LengthTP");
                _LengthTP = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LengthTP");
                OnLengthTPChanged();
            }
        }
        private Nullable<global::System.Double> _LengthTP;
        partial void OnLengthTPChanging(Nullable<global::System.Double> value);
        partial void OnLengthTPChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> WidthTP
        {
            get
            {
                return _WidthTP;
            }
            set
            {
                OnWidthTPChanging(value);
                ReportPropertyChanging("WidthTP");
                _WidthTP = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WidthTP");
                OnWidthTPChanged();
            }
        }
        private Nullable<global::System.Double> _WidthTP;
        partial void OnWidthTPChanging(Nullable<global::System.Double> value);
        partial void OnWidthTPChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> HeightTP
        {
            get
            {
                return _HeightTP;
            }
            set
            {
                OnHeightTPChanging(value);
                ReportPropertyChanging("HeightTP");
                _HeightTP = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HeightTP");
                OnHeightTPChanged();
            }
        }
        private Nullable<global::System.Double> _HeightTP;
        partial void OnHeightTPChanging(Nullable<global::System.Double> value);
        partial void OnHeightTPChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CapacityEmp
        {
            get
            {
                return _CapacityEmp;
            }
            set
            {
                OnCapacityEmpChanging(value);
                ReportPropertyChanging("CapacityEmp");
                _CapacityEmp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CapacityEmp");
                OnCapacityEmpChanged();
            }
        }
        private Nullable<global::System.Int32> _CapacityEmp;
        partial void OnCapacityEmpChanging(Nullable<global::System.Int32> value);
        partial void OnCapacityEmpChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MapId
        {
            get
            {
                return _MapId;
            }
            set
            {
                OnMapIdChanging(value);
                ReportPropertyChanging("MapId");
                _MapId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MapId");
                OnMapIdChanged();
            }
        }
        private Nullable<global::System.Int32> _MapId;
        partial void OnMapIdChanging(Nullable<global::System.Int32> value);
        partial void OnMapIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> X
        {
            get
            {
                return _X;
            }
            set
            {
                OnXChanging(value);
                ReportPropertyChanging("X");
                _X = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("X");
                OnXChanged();
            }
        }
        private Nullable<global::System.Single> _X;
        partial void OnXChanging(Nullable<global::System.Single> value);
        partial void OnXChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> Y
        {
            get
            {
                return _Y;
            }
            set
            {
                OnYChanging(value);
                ReportPropertyChanging("Y");
                _Y = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Y");
                OnYChanged();
            }
        }
        private Nullable<global::System.Single> _Y;
        partial void OnYChanging(Nullable<global::System.Single> value);
        partial void OnYChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_Audience_LampType", "LampType")]
        public LampType LampType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LampType>("AudienceModel.FK_Audience_LampType", "LampType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LampType>("AudienceModel.FK_Audience_LampType", "LampType").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LampType> LampTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LampType>("AudienceModel.FK_Audience_LampType", "LampType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LampType>("AudienceModel.FK_Audience_LampType", "LampType", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_Audience_Map", "Map")]
        public Map Map
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Map>("AudienceModel.FK_Audience_Map", "Map").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Map>("AudienceModel.FK_Audience_Map", "Map").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Map> MapReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Map>("AudienceModel.FK_Audience_Map", "Map");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Map>("AudienceModel.FK_Audience_Map", "Map", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_AUDIENCE_REF_356_CATEGORY", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("AudienceModel.FK_AUDIENCE_REF_356_CATEGORY", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("AudienceModel.FK_AUDIENCE_REF_356_CATEGORY", "Category").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("AudienceModel.FK_AUDIENCE_REF_356_CATEGORY", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("AudienceModel.FK_AUDIENCE_REF_356_CATEGORY", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_AUDIENCE_REF_371_BUILDING", "Building")]
        public Building Building
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Building>("AudienceModel.FK_AUDIENCE_REF_371_BUILDING", "Building").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Building>("AudienceModel.FK_AUDIENCE_REF_371_BUILDING", "Building").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Building> BuildingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Building>("AudienceModel.FK_AUDIENCE_REF_371_BUILDING", "Building");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Building>("AudienceModel.FK_AUDIENCE_REF_371_BUILDING", "Building", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_AUDIENCE_REF_377_STATE", "State")]
        public State State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("AudienceModel.FK_AUDIENCE_REF_377_STATE", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("AudienceModel.FK_AUDIENCE_REF_377_STATE", "State").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("AudienceModel.FK_AUDIENCE_REF_377_STATE", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("AudienceModel.FK_AUDIENCE_REF_377_STATE", "State", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_AUDIENCE_REFERENCE_BEAUTY", "Beauty")]
        public Beauty Beauty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Beauty>("AudienceModel.FK_AUDIENCE_REFERENCE_BEAUTY", "Beauty").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Beauty>("AudienceModel.FK_AUDIENCE_REFERENCE_BEAUTY", "Beauty").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Beauty> BeautyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Beauty>("AudienceModel.FK_AUDIENCE_REFERENCE_BEAUTY", "Beauty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Beauty>("AudienceModel.FK_AUDIENCE_REFERENCE_BEAUTY", "Beauty", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_Audience_Responsible", "Responsible")]
        public Responsible Responsible
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Responsible>("AudienceModel.FK_Audience_Responsible", "Responsible").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Responsible>("AudienceModel.FK_Audience_Responsible", "Responsible").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Responsible> ResponsibleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Responsible>("AudienceModel.FK_Audience_Responsible", "Responsible");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Responsible>("AudienceModel.FK_Audience_Responsible", "Responsible", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_Audience_Subdivision", "Subdivision")]
        public Subdivision Subdivision
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subdivision>("AudienceModel.FK_Audience_Subdivision", "Subdivision").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subdivision>("AudienceModel.FK_Audience_Subdivision", "Subdivision").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subdivision> SubdivisionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subdivision>("AudienceModel.FK_Audience_Subdivision", "Subdivision");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subdivision>("AudienceModel.FK_Audience_Subdivision", "Subdivision", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_EQUIPMEN_REFERENCE_AUDIENCE", "Equipment")]
        public EntityCollection<Equipment> Equipment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Equipment>("AudienceModel.FK_EQUIPMEN_REFERENCE_AUDIENCE", "Equipment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Equipment>("AudienceModel.FK_EQUIPMEN_REFERENCE_AUDIENCE", "Equipment", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_REPAIR_REFERENCE_AUDIENCE", "Repair")]
        public EntityCollection<Repair> Repair
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Repair>("AudienceModel.FK_REPAIR_REFERENCE_AUDIENCE", "Repair");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Repair>("AudienceModel.FK_REPAIR_REFERENCE_AUDIENCE", "Repair", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_TIMETABL_REFERENCE_AUDIENCE", "TimeTable")]
        public EntityCollection<TimeTable> TimeTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimeTable>("AudienceModel.FK_TIMETABL_REFERENCE_AUDIENCE", "TimeTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimeTable>("AudienceModel.FK_TIMETABL_REFERENCE_AUDIENCE", "TimeTable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="Beauty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Beauty : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Beauty.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static Beauty CreateBeauty(global::System.Int32 id)
        {
            Beauty beauty = new Beauty();
            beauty.Id = id;
            return beauty;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_AUDIENCE_REFERENCE_BEAUTY", "Audience")]
        public EntityCollection<Audience> Audience
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Audience>("AudienceModel.FK_AUDIENCE_REFERENCE_BEAUTY", "Audience");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Audience>("AudienceModel.FK_AUDIENCE_REFERENCE_BEAUTY", "Audience", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="Building")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Building : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Building.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static Building CreateBuilding(global::System.Int32 id)
        {
            Building building = new Building();
            building.Id = id;
            return building;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_AUDIENCE_REF_371_BUILDING", "Audience")]
        public EntityCollection<Audience> Audience
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Audience>("AudienceModel.FK_AUDIENCE_REF_371_BUILDING", "Audience");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Audience>("AudienceModel.FK_AUDIENCE_REF_371_BUILDING", "Audience", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Category.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static Category CreateCategory(global::System.Int32 id)
        {
            Category category = new Category();
            category.Id = id;
            return category;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortTitle
        {
            get
            {
                return _ShortTitle;
            }
            set
            {
                OnShortTitleChanging(value);
                ReportPropertyChanging("ShortTitle");
                _ShortTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortTitle");
                OnShortTitleChanged();
            }
        }
        private global::System.String _ShortTitle;
        partial void OnShortTitleChanging(global::System.String value);
        partial void OnShortTitleChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_AUDIENCE_REF_356_CATEGORY", "Audience")]
        public EntityCollection<Audience> Audience
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Audience>("AudienceModel.FK_AUDIENCE_REF_356_CATEGORY", "Audience");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Audience>("AudienceModel.FK_AUDIENCE_REF_356_CATEGORY", "Audience", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "CategoryRole", "aspnet_Roles")]
        public EntityCollection<aspnet_Roles> aspnet_Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Roles>("AudienceModel.CategoryRole", "aspnet_Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Roles>("AudienceModel.CategoryRole", "aspnet_Roles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="Degree")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Degree : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Degree.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static Degree CreateDegree(global::System.Int32 id)
        {
            Degree degree = new Degree();
            degree.Id = id;
            return degree;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortTitle
        {
            get
            {
                return _ShortTitle;
            }
            set
            {
                OnShortTitleChanging(value);
                ReportPropertyChanging("ShortTitle");
                _ShortTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortTitle");
                OnShortTitleChanged();
            }
        }
        private global::System.String _ShortTitle;
        partial void OnShortTitleChanging(global::System.String value);
        partial void OnShortTitleChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_Tutor_new_Degree", "Tutor")]
        public EntityCollection<Tutor> Tutor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tutor>("AudienceModel.FK_Tutor_new_Degree", "Tutor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tutor>("AudienceModel.FK_Tutor_new_Degree", "Tutor", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="Discipline")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Discipline : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Discipline.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static Discipline CreateDiscipline(global::System.Int32 id)
        {
            Discipline discipline = new Discipline();
            discipline.Id = id;
            return discipline;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IVTF
        {
            get
            {
                return _IVTF;
            }
            set
            {
                OnIVTFChanging(value);
                ReportPropertyChanging("IVTF");
                _IVTF = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IVTF");
                OnIVTFChanged();
            }
        }
        private Nullable<global::System.Boolean> _IVTF;
        partial void OnIVTFChanging(Nullable<global::System.Boolean> value);
        partial void OnIVTFChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IFF
        {
            get
            {
                return _IFF;
            }
            set
            {
                OnIFFChanging(value);
                ReportPropertyChanging("IFF");
                _IFF = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IFF");
                OnIFFChanged();
            }
        }
        private Nullable<global::System.Boolean> _IFF;
        partial void OnIFFChanging(Nullable<global::System.Boolean> value);
        partial void OnIFFChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> TEF
        {
            get
            {
                return _TEF;
            }
            set
            {
                OnTEFChanging(value);
                ReportPropertyChanging("TEF");
                _TEF = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TEF");
                OnTEFChanged();
            }
        }
        private Nullable<global::System.Boolean> _TEF;
        partial void OnTEFChanging(Nullable<global::System.Boolean> value);
        partial void OnTEFChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> FEY
        {
            get
            {
                return _FEY;
            }
            set
            {
                OnFEYChanging(value);
                ReportPropertyChanging("FEY");
                _FEY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FEY");
                OnFEYChanged();
            }
        }
        private Nullable<global::System.Boolean> _FEY;
        partial void OnFEYChanging(Nullable<global::System.Boolean> value);
        partial void OnFEYChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> EMF
        {
            get
            {
                return _EMF;
            }
            set
            {
                OnEMFChanging(value);
                ReportPropertyChanging("EMF");
                _EMF = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EMF");
                OnEMFChanged();
            }
        }
        private Nullable<global::System.Boolean> _EMF;
        partial void OnEMFChanging(Nullable<global::System.Boolean> value);
        partial void OnEMFChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> EEF
        {
            get
            {
                return _EEF;
            }
            set
            {
                OnEEFChanging(value);
                ReportPropertyChanging("EEF");
                _EEF = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EEF");
                OnEEFChanged();
            }
        }
        private Nullable<global::System.Boolean> _EEF;
        partial void OnEEFChanging(Nullable<global::System.Boolean> value);
        partial void OnEEFChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> FZVO
        {
            get
            {
                return _FZVO;
            }
            set
            {
                OnFZVOChanging(value);
                ReportPropertyChanging("FZVO");
                _FZVO = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FZVO");
                OnFZVOChanged();
            }
        }
        private Nullable<global::System.Boolean> _FZVO;
        partial void OnFZVOChanging(Nullable<global::System.Boolean> value);
        partial void OnFZVOChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_SubDivisionDiscipline_Discipline", "SubDivisionDiscipline")]
        public EntityCollection<SubDivisionDiscipline> SubDivisionDiscipline
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubDivisionDiscipline>("AudienceModel.FK_SubDivisionDiscipline_Discipline", "SubDivisionDiscipline");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubDivisionDiscipline>("AudienceModel.FK_SubDivisionDiscipline_Discipline", "SubDivisionDiscipline", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_TIMETABL_DISCIPLINE", "TimeTable")]
        public EntityCollection<TimeTable> TimeTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimeTable>("AudienceModel.FK_TIMETABL_DISCIPLINE", "TimeTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimeTable>("AudienceModel.FK_TIMETABL_DISCIPLINE", "TimeTable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="Doc")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Doc : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Doc.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="title">Исходное значение свойства Title.</param>
        /// <param name="date">Исходное значение свойства Date.</param>
        public static Doc CreateDoc(global::System.Int32 id, global::System.String title, global::System.DateTime date)
        {
            Doc doc = new Doc();
            doc.Id = id;
            doc.Title = title;
            doc.Date = date;
            return doc;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateDoc
        {
            get
            {
                return _DateDoc;
            }
            set
            {
                OnDateDocChanging(value);
                ReportPropertyChanging("DateDoc");
                _DateDoc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateDoc");
                OnDateDocChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateDoc;
        partial void OnDateDocChanging(Nullable<global::System.DateTime> value);
        partial void OnDateDocChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                OnObjectIdChanging(value);
                ReportPropertyChanging("ObjectId");
                _ObjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ObjectId");
                OnObjectIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ObjectId;
        partial void OnObjectIdChanging(Nullable<global::System.Int32> value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ObjectTypeId
        {
            get
            {
                return _ObjectTypeId;
            }
            set
            {
                OnObjectTypeIdChanging(value);
                ReportPropertyChanging("ObjectTypeId");
                _ObjectTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ObjectTypeId");
                OnObjectTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ObjectTypeId;
        partial void OnObjectTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnObjectTypeIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FileId
        {
            get
            {
                return _FileId;
            }
            set
            {
                OnFileIdChanging(value);
                ReportPropertyChanging("FileId");
                _FileId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileId");
                OnFileIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FileId;
        partial void OnFileIdChanging(Nullable<global::System.Int32> value);
        partial void OnFileIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DocTypeId
        {
            get
            {
                return _DocTypeId;
            }
            set
            {
                OnDocTypeIdChanging(value);
                ReportPropertyChanging("DocTypeId");
                _DocTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocTypeId");
                OnDocTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DocTypeId;
        partial void OnDocTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnDocTypeIdChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_Doc_Doc", "ObjectType")]
        public ObjectType ObjectType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ObjectType>("AudienceModel.FK_Doc_Doc", "ObjectType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ObjectType>("AudienceModel.FK_Doc_Doc", "ObjectType").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ObjectType> ObjectTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ObjectType>("AudienceModel.FK_Doc_Doc", "ObjectType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ObjectType>("AudienceModel.FK_Doc_Doc", "ObjectType", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_Doc_DocType", "DocType")]
        public DocType DocType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocType>("AudienceModel.FK_Doc_DocType", "DocType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocType>("AudienceModel.FK_Doc_DocType", "DocType").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DocType> DocTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocType>("AudienceModel.FK_Doc_DocType", "DocType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DocType>("AudienceModel.FK_Doc_DocType", "DocType", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_Doc_File", "File")]
        public File File
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("AudienceModel.FK_Doc_File", "File").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("AudienceModel.FK_Doc_File", "File").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<File> FileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("AudienceModel.FK_Doc_File", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<File>("AudienceModel.FK_Doc_File", "File", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="DocType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DocType : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта DocType.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="title">Исходное значение свойства Title.</param>
        public static DocType CreateDocType(global::System.Int32 id, global::System.String title)
        {
            DocType docType = new DocType();
            docType.Id = id;
            docType.Title = title;
            return docType;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_Doc_DocType", "Doc")]
        public EntityCollection<Doc> Doc
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Doc>("AudienceModel.FK_Doc_DocType", "Doc");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Doc>("AudienceModel.FK_Doc_DocType", "Doc", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="EducationForm")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EducationForm : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта EducationForm.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static EducationForm CreateEducationForm(global::System.Int32 id)
        {
            EducationForm educationForm = new EducationForm();
            educationForm.Id = id;
            return educationForm;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_SHEDULE_REFERENCE_EDUCATIO", "Shedule")]
        public EntityCollection<Shedule> Shedule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Shedule>("AudienceModel.FK_SHEDULE_REFERENCE_EDUCATIO", "Shedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Shedule>("AudienceModel.FK_SHEDULE_REFERENCE_EDUCATIO", "Shedule", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="EducationKind")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EducationKind : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта EducationKind.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static EducationKind CreateEducationKind(global::System.Int32 id)
        {
            EducationKind educationKind = new EducationKind();
            educationKind.Id = id;
            return educationKind;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_TIMETABL_REFERENCE_EDUCATIO", "TimeTable")]
        public EntityCollection<TimeTable> TimeTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimeTable>("AudienceModel.FK_TIMETABL_REFERENCE_EDUCATIO", "TimeTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimeTable>("AudienceModel.FK_TIMETABL_REFERENCE_EDUCATIO", "TimeTable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="Equipment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Equipment : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Equipment.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="audienceId">Исходное значение свойства AudienceId.</param>
        public static Equipment CreateEquipment(global::System.Int32 id, global::System.Int32 audienceId)
        {
            Equipment equipment = new Equipment();
            equipment.Id = id;
            equipment.AudienceId = audienceId;
            return equipment;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AudienceId
        {
            get
            {
                return _AudienceId;
            }
            set
            {
                OnAudienceIdChanging(value);
                ReportPropertyChanging("AudienceId");
                _AudienceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AudienceId");
                OnAudienceIdChanged();
            }
        }
        private global::System.Int32 _AudienceId;
        partial void OnAudienceIdChanging(global::System.Int32 value);
        partial void OnAudienceIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ElementId
        {
            get
            {
                return _ElementId;
            }
            set
            {
                OnElementIdChanging(value);
                ReportPropertyChanging("ElementId");
                _ElementId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ElementId");
                OnElementIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ElementId;
        partial void OnElementIdChanging(Nullable<global::System.Int32> value);
        partial void OnElementIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Assessment
        {
            get
            {
                return _Assessment;
            }
            set
            {
                OnAssessmentChanging(value);
                ReportPropertyChanging("Assessment");
                _Assessment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Assessment");
                OnAssessmentChanged();
            }
        }
        private Nullable<global::System.Int32> _Assessment;
        partial void OnAssessmentChanging(Nullable<global::System.Int32> value);
        partial void OnAssessmentChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private Nullable<global::System.Decimal> _Cost;
        partial void OnCostChanging(Nullable<global::System.Decimal> value);
        partial void OnCostChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_EQUIPMEN_REFERENCE_AUDIENCE", "Audience")]
        public Audience Audience
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Audience>("AudienceModel.FK_EQUIPMEN_REFERENCE_AUDIENCE", "Audience").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Audience>("AudienceModel.FK_EQUIPMEN_REFERENCE_AUDIENCE", "Audience").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Audience> AudienceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Audience>("AudienceModel.FK_EQUIPMEN_REFERENCE_AUDIENCE", "Audience");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Audience>("AudienceModel.FK_EQUIPMEN_REFERENCE_AUDIENCE", "Audience", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_EQUIPMEN_REFERENCE_EQUIPMEN", "EquipmentType")]
        public EquipmentType EquipmentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EquipmentType>("AudienceModel.FK_EQUIPMEN_REFERENCE_EQUIPMEN", "EquipmentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EquipmentType>("AudienceModel.FK_EQUIPMEN_REFERENCE_EQUIPMEN", "EquipmentType").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EquipmentType> EquipmentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EquipmentType>("AudienceModel.FK_EQUIPMEN_REFERENCE_EQUIPMEN", "EquipmentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EquipmentType>("AudienceModel.FK_EQUIPMEN_REFERENCE_EQUIPMEN", "EquipmentType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="EquipmentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EquipmentType : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта EquipmentType.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="title">Исходное значение свойства Title.</param>
        public static EquipmentType CreateEquipmentType(global::System.Int32 id, global::System.String title)
        {
            EquipmentType equipmentType = new EquipmentType();
            equipmentType.Id = id;
            equipmentType.Title = title;
            return equipmentType;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_EQUIPMEN_REFERENCE_EQUIPMEN", "Equipment")]
        public EntityCollection<Equipment> Equipment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Equipment>("AudienceModel.FK_EQUIPMEN_REFERENCE_EQUIPMEN", "Equipment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Equipment>("AudienceModel.FK_EQUIPMEN_REFERENCE_EQUIPMEN", "Equipment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="Estate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Estate : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Estate.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="isLot">Исходное значение свойства IsLot.</param>
        /// <param name="title">Исходное значение свойства Title.</param>
        public static Estate CreateEstate(global::System.Int32 id, global::System.Boolean isLot, global::System.String title)
        {
            Estate estate = new Estate();
            estate.Id = id;
            estate.IsLot = isLot;
            estate.Title = title;
            return estate;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLot
        {
            get
            {
                return _IsLot;
            }
            set
            {
                OnIsLotChanging(value);
                ReportPropertyChanging("IsLot");
                _IsLot = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLot");
                OnIsLotChanged();
            }
        }
        private global::System.Boolean _IsLot;
        partial void OnIsLotChanging(global::System.Boolean value);
        partial void OnIsLotChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Litera
        {
            get
            {
                return _Litera;
            }
            set
            {
                OnLiteraChanging(value);
                ReportPropertyChanging("Litera");
                _Litera = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Litera");
                OnLiteraChanged();
            }
        }
        private global::System.String _Litera;
        partial void OnLiteraChanging(global::System.String value);
        partial void OnLiteraChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FloorCount
        {
            get
            {
                return _FloorCount;
            }
            set
            {
                OnFloorCountChanging(value);
                ReportPropertyChanging("FloorCount");
                _FloorCount = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FloorCount");
                OnFloorCountChanged();
            }
        }
        private global::System.String _FloorCount;
        partial void OnFloorCountChanging(global::System.String value);
        partial void OnFloorCountChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> Area
        {
            get
            {
                return _Area;
            }
            set
            {
                OnAreaChanging(value);
                ReportPropertyChanging("Area");
                _Area = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Area");
                OnAreaChanged();
            }
        }
        private Nullable<global::System.Single> _Area;
        partial void OnAreaChanging(Nullable<global::System.Single> value);
        partial void OnAreaChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CadNum
        {
            get
            {
                return _CadNum;
            }
            set
            {
                OnCadNumChanging(value);
                ReportPropertyChanging("CadNum");
                _CadNum = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CadNum");
                OnCadNumChanged();
            }
        }
        private global::System.String _CadNum;
        partial void OnCadNumChanging(global::System.String value);
        partial void OnCadNumChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LotId
        {
            get
            {
                return _LotId;
            }
            set
            {
                OnLotIdChanging(value);
                ReportPropertyChanging("LotId");
                _LotId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LotId");
                OnLotIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LotId;
        partial void OnLotIdChanging(Nullable<global::System.Int32> value);
        partial void OnLotIdChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_Estate_Estate", "Estate1")]
        public EntityCollection<Estate> Estate1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Estate>("AudienceModel.FK_Estate_Estate", "Estate1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Estate>("AudienceModel.FK_Estate_Estate", "Estate1", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_Estate_Estate", "Estate")]
        public Estate Estate2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Estate>("AudienceModel.FK_Estate_Estate", "Estate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Estate>("AudienceModel.FK_Estate_Estate", "Estate").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Estate> Estate2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Estate>("AudienceModel.FK_Estate_Estate", "Estate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Estate>("AudienceModel.FK_Estate_Estate", "Estate", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="ETime")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ETime : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ETime.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static ETime CreateETime(global::System.Int32 id)
        {
            ETime eTime = new ETime();
            eTime.Id = id;
            return eTime;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BegTime
        {
            get
            {
                return _BegTime;
            }
            set
            {
                OnBegTimeChanging(value);
                ReportPropertyChanging("BegTime");
                _BegTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BegTime");
                OnBegTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _BegTime;
        partial void OnBegTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnBegTimeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndTime;
        partial void OnEndTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_TIMETABL_REFERENCE_ETIME", "TimeTable")]
        public EntityCollection<TimeTable> TimeTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimeTable>("AudienceModel.FK_TIMETABL_REFERENCE_ETIME", "TimeTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimeTable>("AudienceModel.FK_TIMETABL_REFERENCE_ETIME", "TimeTable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="EventType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventType : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта EventType.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="title">Исходное значение свойства Title.</param>
        /// <param name="description">Исходное значение свойства Description.</param>
        public static EventType CreateEventType(global::System.Int32 id, global::System.String title, global::System.String description)
        {
            EventType eventType = new EventType();
            eventType.ID = id;
            eventType.Title = title;
            eventType.Description = description;
            return eventType;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_Statistics_EventType", "Statistics")]
        public EntityCollection<Statistics> Statistics
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Statistics>("AudienceModel.FK_Statistics_EventType", "Statistics");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Statistics>("AudienceModel.FK_Statistics_EventType", "Statistics", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="Faculty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Faculty : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Faculty.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static Faculty CreateFaculty(global::System.Int32 id)
        {
            Faculty faculty = new Faculty();
            faculty.Id = id;
            return faculty;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortTitle
        {
            get
            {
                return _ShortTitle;
            }
            set
            {
                OnShortTitleChanging(value);
                ReportPropertyChanging("ShortTitle");
                _ShortTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortTitle");
                OnShortTitleChanged();
            }
        }
        private global::System.String _ShortTitle;
        partial void OnShortTitleChanging(global::System.String value);
        partial void OnShortTitleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="File")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class File : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта File.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="data">Исходное значение свойства Data.</param>
        /// <param name="title">Исходное значение свойства Title.</param>
        /// <param name="format">Исходное значение свойства Format.</param>
        public static File CreateFile(global::System.Int32 id, global::System.Byte[] data, global::System.String title, global::System.String format)
        {
            File file = new File();
            file.ID = id;
            file.Data = data;
            file.Title = title;
            file.Format = format;
            return file;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Data
        {
            get
            {
                return StructuralObject.GetValidValue(_Data);
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.Byte[] _Data;
        partial void OnDataChanging(global::System.Byte[] value);
        partial void OnDataChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Format
        {
            get
            {
                return _Format;
            }
            set
            {
                OnFormatChanging(value);
                ReportPropertyChanging("Format");
                _Format = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Format");
                OnFormatChanged();
            }
        }
        private global::System.String _Format;
        partial void OnFormatChanging(global::System.String value);
        partial void OnFormatChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_Doc_File", "Doc")]
        public EntityCollection<Doc> Doc
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Doc>("AudienceModel.FK_Doc_File", "Doc");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Doc>("AudienceModel.FK_Doc_File", "Doc", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="Groups")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Groups : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Groups.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static Groups CreateGroups(global::System.Int32 id)
        {
            Groups groups = new Groups();
            groups.Id = id;
            return groups;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubDivisionId
        {
            get
            {
                return _SubDivisionId;
            }
            set
            {
                OnSubDivisionIdChanging(value);
                ReportPropertyChanging("SubDivisionId");
                _SubDivisionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubDivisionId");
                OnSubDivisionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SubDivisionId;
        partial void OnSubDivisionIdChanging(Nullable<global::System.Int32> value);
        partial void OnSubDivisionIdChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_Groups_Subdivision", "Subdivision")]
        public Subdivision Subdivision
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subdivision>("AudienceModel.FK_Groups_Subdivision", "Subdivision").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subdivision>("AudienceModel.FK_Groups_Subdivision", "Subdivision").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subdivision> SubdivisionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subdivision>("AudienceModel.FK_Groups_Subdivision", "Subdivision");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subdivision>("AudienceModel.FK_Groups_Subdivision", "Subdivision", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_SubGroup_Groups", "SubGroup")]
        public EntityCollection<SubGroup> SubGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubGroup>("AudienceModel.FK_SubGroup_Groups", "SubGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubGroup>("AudienceModel.FK_SubGroup_Groups", "SubGroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="LampType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LampType : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта LampType.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="title">Исходное значение свойства Title.</param>
        public static LampType CreateLampType(global::System.Int32 id, global::System.String title)
        {
            LampType lampType = new LampType();
            lampType.Id = id;
            lampType.Title = title;
            return lampType;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_Audience_LampType", "Audience")]
        public EntityCollection<Audience> Audience
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Audience>("AudienceModel.FK_Audience_LampType", "Audience");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Audience>("AudienceModel.FK_Audience_LampType", "Audience", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="Map")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Map : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Map.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="title">Исходное значение свойства Title.</param>
        /// <param name="path">Исходное значение свойства Path.</param>
        public static Map CreateMap(global::System.Int32 id, global::System.String title, global::System.String path)
        {
            Map map = new Map();
            map.Id = id;
            map.Title = title;
            map.Path = path;
            return map;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Path
        {
            get
            {
                return _Path;
            }
            set
            {
                OnPathChanging(value);
                ReportPropertyChanging("Path");
                _Path = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Path");
                OnPathChanged();
            }
        }
        private global::System.String _Path;
        partial void OnPathChanging(global::System.String value);
        partial void OnPathChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_Audience_Map", "Audience")]
        public EntityCollection<Audience> Audience
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Audience>("AudienceModel.FK_Audience_Map", "Audience");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Audience>("AudienceModel.FK_Audience_Map", "Audience", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="News")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class News : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта News.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="header">Исходное значение свойства Header.</param>
        /// <param name="date">Исходное значение свойства Date.</param>
        /// <param name="shortText">Исходное значение свойства ShortText.</param>
        /// <param name="text">Исходное значение свойства Text.</param>
        /// <param name="isActive">Исходное значение свойства IsActive.</param>
        public static News CreateNews(global::System.Int32 id, global::System.String header, global::System.DateTime date, global::System.String shortText, global::System.String text, global::System.Boolean isActive)
        {
            News news = new News();
            news.Id = id;
            news.Header = header;
            news.Date = date;
            news.ShortText = shortText;
            news.Text = text;
            news.IsActive = isActive;
            return news;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Header
        {
            get
            {
                return _Header;
            }
            set
            {
                OnHeaderChanging(value);
                ReportPropertyChanging("Header");
                _Header = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Header");
                OnHeaderChanged();
            }
        }
        private global::System.String _Header;
        partial void OnHeaderChanging(global::System.String value);
        partial void OnHeaderChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShortText
        {
            get
            {
                return _ShortText;
            }
            set
            {
                OnShortTextChanging(value);
                ReportPropertyChanging("ShortText");
                _ShortText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ShortText");
                OnShortTextChanged();
            }
        }
        private global::System.String _ShortText;
        partial void OnShortTextChanging(global::System.String value);
        partial void OnShortTextChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="ObjectType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ObjectType : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ObjectType.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="code">Исходное значение свойства Code.</param>
        public static ObjectType CreateObjectType(global::System.Int32 id, global::System.String code)
        {
            ObjectType objectType = new ObjectType();
            objectType.Id = id;
            objectType.Code = code;
            return objectType;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_Doc_Doc", "Doc")]
        public EntityCollection<Doc> Doc
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Doc>("AudienceModel.FK_Doc_Doc", "Doc");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Doc>("AudienceModel.FK_Doc_Doc", "Doc", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="Profile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Profile : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Profile.
        /// </summary>
        /// <param name="userId">Исходное значение свойства UserId.</param>
        public static Profile CreateProfile(global::System.Guid userId)
        {
            Profile profile = new Profile();
            profile.UserId = userId;
            return profile;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Patronimic
        {
            get
            {
                return _Patronimic;
            }
            set
            {
                OnPatronimicChanging(value);
                ReportPropertyChanging("Patronimic");
                _Patronimic = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Patronimic");
                OnPatronimicChanged();
            }
        }
        private global::System.String _Patronimic;
        partial void OnPatronimicChanging(global::System.String value);
        partial void OnPatronimicChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FIO
        {
            get
            {
                return _FIO;
            }
            set
            {
                OnFIOChanging(value);
                ReportPropertyChanging("FIO");
                _FIO = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FIO");
                OnFIOChanged();
            }
        }
        private global::System.String _FIO;
        partial void OnFIOChanging(global::System.String value);
        partial void OnFIOChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FI
        {
            get
            {
                return _FI;
            }
            set
            {
                OnFIChanging(value);
                ReportPropertyChanging("FI");
                _FI = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FI");
                OnFIChanged();
            }
        }
        private global::System.String _FI;
        partial void OnFIChanging(global::System.String value);
        partial void OnFIChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ICQ
        {
            get
            {
                return _ICQ;
            }
            set
            {
                OnICQChanging(value);
                ReportPropertyChanging("ICQ");
                _ICQ = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ICQ");
                OnICQChanged();
            }
        }
        private global::System.String _ICQ;
        partial void OnICQChanging(global::System.String value);
        partial void OnICQChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Rank
        {
            get
            {
                return _Rank;
            }
            set
            {
                OnRankChanging(value);
                ReportPropertyChanging("Rank");
                _Rank = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Rank");
                OnRankChanged();
            }
        }
        private global::System.String _Rank;
        partial void OnRankChanging(global::System.String value);
        partial void OnRankChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_Profile_aspnet_Users", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("AudienceModel.FK_Profile_aspnet_Users", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("AudienceModel.FK_Profile_aspnet_Users", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("AudienceModel.FK_Profile_aspnet_Users", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("AudienceModel.FK_Profile_aspnet_Users", "aspnet_Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="Repair")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Repair : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Repair.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="audienceId">Исходное значение свойства AudienceId.</param>
        public static Repair CreateRepair(global::System.Int32 id, global::System.Int32 audienceId)
        {
            Repair repair = new Repair();
            repair.Id = id;
            repair.AudienceId = audienceId;
            return repair;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AudienceId
        {
            get
            {
                return _AudienceId;
            }
            set
            {
                OnAudienceIdChanging(value);
                ReportPropertyChanging("AudienceId");
                _AudienceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AudienceId");
                OnAudienceIdChanged();
            }
        }
        private global::System.Int32 _AudienceId;
        partial void OnAudienceIdChanging(global::System.Int32 value);
        partial void OnAudienceIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BeginDate
        {
            get
            {
                return _BeginDate;
            }
            set
            {
                OnBeginDateChanging(value);
                ReportPropertyChanging("BeginDate");
                _BeginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BeginDate");
                OnBeginDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BeginDate;
        partial void OnBeginDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBeginDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private Nullable<global::System.Decimal> _Cost;
        partial void OnCostChanging(Nullable<global::System.Decimal> value);
        partial void OnCostChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_REPAIR_REFERENCE_AUDIENCE", "Audience")]
        public Audience Audience
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Audience>("AudienceModel.FK_REPAIR_REFERENCE_AUDIENCE", "Audience").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Audience>("AudienceModel.FK_REPAIR_REFERENCE_AUDIENCE", "Audience").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Audience> AudienceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Audience>("AudienceModel.FK_REPAIR_REFERENCE_AUDIENCE", "Audience");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Audience>("AudienceModel.FK_REPAIR_REFERENCE_AUDIENCE", "Audience", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="Responsible")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Responsible : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Responsible.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="title">Исходное значение свойства Title.</param>
        public static Responsible CreateResponsible(global::System.Int32 id, global::System.String title)
        {
            Responsible responsible = new Responsible();
            responsible.Id = id;
            responsible.Title = title;
            return responsible;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_Audience_Responsible", "Audience")]
        public EntityCollection<Audience> Audience
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Audience>("AudienceModel.FK_Audience_Responsible", "Audience");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Audience>("AudienceModel.FK_Audience_Responsible", "Audience", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="Section")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Section : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Section.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="title">Исходное значение свойства Title.</param>
        /// <param name="description">Исходное значение свойства Description.</param>
        public static Section CreateSection(global::System.Int32 id, global::System.String title, global::System.String description)
        {
            Section section = new Section();
            section.ID = id;
            section.Title = title;
            section.Description = description;
            return section;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_Statistics_Section", "Statistics")]
        public EntityCollection<Statistics> Statistics
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Statistics>("AudienceModel.FK_Statistics_Section", "Statistics");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Statistics>("AudienceModel.FK_Statistics_Section", "Statistics", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="Sem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sem : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Sem.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static Sem CreateSem(global::System.Int32 id)
        {
            Sem sem = new Sem();
            sem.Id = id;
            return sem;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_SHEDULE_REFERENCE_SEM", "Shedule")]
        public EntityCollection<Shedule> Shedule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Shedule>("AudienceModel.FK_SHEDULE_REFERENCE_SEM", "Shedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Shedule>("AudienceModel.FK_SHEDULE_REFERENCE_SEM", "Shedule", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="Shedule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Shedule : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Shedule.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static Shedule CreateShedule(global::System.Int32 id)
        {
            Shedule shedule = new Shedule();
            shedule.Id = id;
            return shedule;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LYear
        {
            get
            {
                return _LYear;
            }
            set
            {
                OnLYearChanging(value);
                ReportPropertyChanging("LYear");
                _LYear = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LYear");
                OnLYearChanged();
            }
        }
        private global::System.String _LYear;
        partial void OnLYearChanging(global::System.String value);
        partial void OnLYearChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SemId
        {
            get
            {
                return _SemId;
            }
            set
            {
                OnSemIdChanging(value);
                ReportPropertyChanging("SemId");
                _SemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SemId");
                OnSemIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SemId;
        partial void OnSemIdChanging(Nullable<global::System.Int32> value);
        partial void OnSemIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EducationFormId
        {
            get
            {
                return _EducationFormId;
            }
            set
            {
                OnEducationFormIdChanging(value);
                ReportPropertyChanging("EducationFormId");
                _EducationFormId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EducationFormId");
                OnEducationFormIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EducationFormId;
        partial void OnEducationFormIdChanging(Nullable<global::System.Int32> value);
        partial void OnEducationFormIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SheduleTypeId
        {
            get
            {
                return _SheduleTypeId;
            }
            set
            {
                OnSheduleTypeIdChanging(value);
                ReportPropertyChanging("SheduleTypeId");
                _SheduleTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SheduleTypeId");
                OnSheduleTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SheduleTypeId;
        partial void OnSheduleTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnSheduleTypeIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BegDate
        {
            get
            {
                return _BegDate;
            }
            set
            {
                OnBegDateChanging(value);
                ReportPropertyChanging("BegDate");
                _BegDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BegDate");
                OnBegDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BegDate;
        partial void OnBegDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBegDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BegWeekDayId
        {
            get
            {
                return _BegWeekDayId;
            }
            set
            {
                OnBegWeekDayIdChanging(value);
                ReportPropertyChanging("BegWeekDayId");
                _BegWeekDayId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BegWeekDayId");
                OnBegWeekDayIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BegWeekDayId;
        partial void OnBegWeekDayIdChanging(Nullable<global::System.Int32> value);
        partial void OnBegWeekDayIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BegWeekNumber
        {
            get
            {
                return _BegWeekNumber;
            }
            set
            {
                OnBegWeekNumberChanging(value);
                ReportPropertyChanging("BegWeekNumber");
                _BegWeekNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BegWeekNumber");
                OnBegWeekNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _BegWeekNumber;
        partial void OnBegWeekNumberChanging(Nullable<global::System.Int32> value);
        partial void OnBegWeekNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_SHEDULE_REFERENCE_EDUCATIO", "EducationForm")]
        public EducationForm EducationForm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EducationForm>("AudienceModel.FK_SHEDULE_REFERENCE_EDUCATIO", "EducationForm").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EducationForm>("AudienceModel.FK_SHEDULE_REFERENCE_EDUCATIO", "EducationForm").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EducationForm> EducationFormReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EducationForm>("AudienceModel.FK_SHEDULE_REFERENCE_EDUCATIO", "EducationForm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EducationForm>("AudienceModel.FK_SHEDULE_REFERENCE_EDUCATIO", "EducationForm", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_SHEDULE_REFERENCE_SEM", "Sem")]
        public Sem Sem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sem>("AudienceModel.FK_SHEDULE_REFERENCE_SEM", "Sem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sem>("AudienceModel.FK_SHEDULE_REFERENCE_SEM", "Sem").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sem> SemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sem>("AudienceModel.FK_SHEDULE_REFERENCE_SEM", "Sem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sem>("AudienceModel.FK_SHEDULE_REFERENCE_SEM", "Sem", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_SHEDULE_REFERENCE_SHEDULET", "SheduleType")]
        public SheduleType SheduleType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SheduleType>("AudienceModel.FK_SHEDULE_REFERENCE_SHEDULET", "SheduleType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SheduleType>("AudienceModel.FK_SHEDULE_REFERENCE_SHEDULET", "SheduleType").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SheduleType> SheduleTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SheduleType>("AudienceModel.FK_SHEDULE_REFERENCE_SHEDULET", "SheduleType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SheduleType>("AudienceModel.FK_SHEDULE_REFERENCE_SHEDULET", "SheduleType", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_TIMETABL_REFERENCE_SHEDULE", "TimeTable")]
        public EntityCollection<TimeTable> TimeTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimeTable>("AudienceModel.FK_TIMETABL_REFERENCE_SHEDULE", "TimeTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimeTable>("AudienceModel.FK_TIMETABL_REFERENCE_SHEDULE", "TimeTable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="SheduleType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SheduleType : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта SheduleType.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static SheduleType CreateSheduleType(global::System.Int32 id)
        {
            SheduleType sheduleType = new SheduleType();
            sheduleType.Id = id;
            return sheduleType;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_SHEDULE_REFERENCE_SHEDULET", "Shedule")]
        public EntityCollection<Shedule> Shedule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Shedule>("AudienceModel.FK_SHEDULE_REFERENCE_SHEDULET", "Shedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Shedule>("AudienceModel.FK_SHEDULE_REFERENCE_SHEDULET", "Shedule", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="State")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class State : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта State.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static State CreateState(global::System.Int32 id)
        {
            State state = new State();
            state.Id = id;
            return state;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_AUDIENCE_REF_377_STATE", "Audience")]
        public EntityCollection<Audience> Audience
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Audience>("AudienceModel.FK_AUDIENCE_REF_377_STATE", "Audience");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Audience>("AudienceModel.FK_AUDIENCE_REF_377_STATE", "Audience", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="Statistics")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Statistics : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Statistics.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="eventTypeID">Исходное значение свойства EventTypeID.</param>
        /// <param name="userID">Исходное значение свойства UserID.</param>
        /// <param name="eventDate">Исходное значение свойства EventDate.</param>
        /// <param name="sectionID">Исходное значение свойства SectionID.</param>
        /// <param name="eventObjectID">Исходное значение свойства EventObjectID.</param>
        /// <param name="userIP">Исходное значение свойства UserIP.</param>
        public static Statistics CreateStatistics(global::System.Int32 id, global::System.Int32 eventTypeID, global::System.Guid userID, global::System.DateTime eventDate, global::System.Int32 sectionID, global::System.Int32 eventObjectID, global::System.String userIP)
        {
            Statistics statistics = new Statistics();
            statistics.ID = id;
            statistics.EventTypeID = eventTypeID;
            statistics.UserID = userID;
            statistics.EventDate = eventDate;
            statistics.SectionID = sectionID;
            statistics.EventObjectID = eventObjectID;
            statistics.UserIP = userIP;
            return statistics;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventTypeID
        {
            get
            {
                return _EventTypeID;
            }
            set
            {
                OnEventTypeIDChanging(value);
                ReportPropertyChanging("EventTypeID");
                _EventTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventTypeID");
                OnEventTypeIDChanged();
            }
        }
        private global::System.Int32 _EventTypeID;
        partial void OnEventTypeIDChanging(global::System.Int32 value);
        partial void OnEventTypeIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventDate
        {
            get
            {
                return _EventDate;
            }
            set
            {
                OnEventDateChanging(value);
                ReportPropertyChanging("EventDate");
                _EventDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventDate");
                OnEventDateChanged();
            }
        }
        private global::System.DateTime _EventDate;
        partial void OnEventDateChanging(global::System.DateTime value);
        partial void OnEventDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SectionID
        {
            get
            {
                return _SectionID;
            }
            set
            {
                OnSectionIDChanging(value);
                ReportPropertyChanging("SectionID");
                _SectionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SectionID");
                OnSectionIDChanged();
            }
        }
        private global::System.Int32 _SectionID;
        partial void OnSectionIDChanging(global::System.Int32 value);
        partial void OnSectionIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventObjectID
        {
            get
            {
                return _EventObjectID;
            }
            set
            {
                OnEventObjectIDChanging(value);
                ReportPropertyChanging("EventObjectID");
                _EventObjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventObjectID");
                OnEventObjectIDChanged();
            }
        }
        private global::System.Int32 _EventObjectID;
        partial void OnEventObjectIDChanging(global::System.Int32 value);
        partial void OnEventObjectIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserIP
        {
            get
            {
                return _UserIP;
            }
            set
            {
                OnUserIPChanging(value);
                ReportPropertyChanging("UserIP");
                _UserIP = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserIP");
                OnUserIPChanged();
            }
        }
        private global::System.String _UserIP;
        partial void OnUserIPChanging(global::System.String value);
        partial void OnUserIPChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_Statistics_aspnet_Users", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("AudienceModel.FK_Statistics_aspnet_Users", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("AudienceModel.FK_Statistics_aspnet_Users", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("AudienceModel.FK_Statistics_aspnet_Users", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("AudienceModel.FK_Statistics_aspnet_Users", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_Statistics_EventType", "EventType")]
        public EventType EventType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("AudienceModel.FK_Statistics_EventType", "EventType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("AudienceModel.FK_Statistics_EventType", "EventType").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventType> EventTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("AudienceModel.FK_Statistics_EventType", "EventType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventType>("AudienceModel.FK_Statistics_EventType", "EventType", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_Statistics_Section", "Section")]
        public Section Section
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Section>("AudienceModel.FK_Statistics_Section", "Section").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Section>("AudienceModel.FK_Statistics_Section", "Section").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Section> SectionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Section>("AudienceModel.FK_Statistics_Section", "Section");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Section>("AudienceModel.FK_Statistics_Section", "Section", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="Stream")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Stream : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Stream.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static Stream CreateStream(global::System.Int32 id)
        {
            Stream stream = new Stream();
            stream.Id = id;
            return stream;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="Subdivision")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Subdivision : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Subdivision.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static Subdivision CreateSubdivision(global::System.Int32 id)
        {
            Subdivision subdivision = new Subdivision();
            subdivision.Id = id;
            return subdivision;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortTitle
        {
            get
            {
                return _ShortTitle;
            }
            set
            {
                OnShortTitleChanging(value);
                ReportPropertyChanging("ShortTitle");
                _ShortTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortTitle");
                OnShortTitleChanged();
            }
        }
        private global::System.String _ShortTitle;
        partial void OnShortTitleChanging(global::System.String value);
        partial void OnShortTitleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private global::System.String _ParentId;
        partial void OnParentIdChanging(global::System.String value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FacultyId
        {
            get
            {
                return _FacultyId;
            }
            set
            {
                OnFacultyIdChanging(value);
                ReportPropertyChanging("FacultyId");
                _FacultyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FacultyId");
                OnFacultyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FacultyId;
        partial void OnFacultyIdChanging(Nullable<global::System.Int32> value);
        partial void OnFacultyIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PFU
        {
            get
            {
                return _PFU;
            }
            set
            {
                OnPFUChanging(value);
                ReportPropertyChanging("PFU");
                _PFU = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PFU");
                OnPFUChanged();
            }
        }
        private global::System.String _PFU;
        partial void OnPFUChanging(global::System.String value);
        partial void OnPFUChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Kind
        {
            get
            {
                return StructuralObject.GetValidValue(_Kind);
            }
            set
            {
                OnKindChanging(value);
                ReportPropertyChanging("Kind");
                _Kind = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Kind");
                OnKindChanged();
            }
        }
        private global::System.Byte[] _Kind;
        partial void OnKindChanging(global::System.Byte[] value);
        partial void OnKindChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Level
        {
            get
            {
                return _Level;
            }
            set
            {
                OnLevelChanging(value);
                ReportPropertyChanging("Level");
                _Level = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Level");
                OnLevelChanged();
            }
        }
        private global::System.String _Level;
        partial void OnLevelChanging(global::System.String value);
        partial void OnLevelChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Sector
        {
            get
            {
                return _Sector;
            }
            set
            {
                OnSectorChanging(value);
                ReportPropertyChanging("Sector");
                _Sector = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sector");
                OnSectorChanged();
            }
        }
        private Nullable<global::System.Int32> _Sector;
        partial void OnSectorChanging(Nullable<global::System.Int32> value);
        partial void OnSectorChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Director
        {
            get
            {
                return StructuralObject.GetValidValue(_Director);
            }
            set
            {
                OnDirectorChanging(value);
                ReportPropertyChanging("Director");
                _Director = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Director");
                OnDirectorChanged();
            }
        }
        private global::System.Byte[] _Director;
        partial void OnDirectorChanging(global::System.Byte[] value);
        partial void OnDirectorChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Zarplata
        {
            get
            {
                return StructuralObject.GetValidValue(_Zarplata);
            }
            set
            {
                OnZarplataChanging(value);
                ReportPropertyChanging("Zarplata");
                _Zarplata = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Zarplata");
                OnZarplataChanged();
            }
        }
        private global::System.Byte[] _Zarplata;
        partial void OnZarplataChanging(global::System.Byte[] value);
        partial void OnZarplataChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_Audience_Subdivision", "Audience")]
        public EntityCollection<Audience> Audience
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Audience>("AudienceModel.FK_Audience_Subdivision", "Audience");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Audience>("AudienceModel.FK_Audience_Subdivision", "Audience", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_Groups_Subdivision", "Groups")]
        public EntityCollection<Groups> Groups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Groups>("AudienceModel.FK_Groups_Subdivision", "Groups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Groups>("AudienceModel.FK_Groups_Subdivision", "Groups", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_Tutor_Subdivision", "Tutor")]
        public EntityCollection<Tutor> Tutor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tutor>("AudienceModel.FK_Tutor_Subdivision", "Tutor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tutor>("AudienceModel.FK_Tutor_Subdivision", "Tutor", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="Subdivision_old")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Subdivision_old : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Subdivision_old.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static Subdivision_old CreateSubdivision_old(global::System.Int32 id)
        {
            Subdivision_old subdivision_old = new Subdivision_old();
            subdivision_old.Id = id;
            return subdivision_old;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private global::System.String _ParentId;
        partial void OnParentIdChanging(global::System.String value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Level
        {
            get
            {
                return _Level;
            }
            set
            {
                OnLevelChanging(value);
                ReportPropertyChanging("Level");
                _Level = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Level");
                OnLevelChanged();
            }
        }
        private global::System.String _Level;
        partial void OnLevelChanging(global::System.String value);
        partial void OnLevelChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Sector
        {
            get
            {
                return _Sector;
            }
            set
            {
                OnSectorChanging(value);
                ReportPropertyChanging("Sector");
                _Sector = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sector");
                OnSectorChanged();
            }
        }
        private Nullable<global::System.Int32> _Sector;
        partial void OnSectorChanging(Nullable<global::System.Int32> value);
        partial void OnSectorChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortTitle
        {
            get
            {
                return _ShortTitle;
            }
            set
            {
                OnShortTitleChanging(value);
                ReportPropertyChanging("ShortTitle");
                _ShortTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortTitle");
                OnShortTitleChanged();
            }
        }
        private global::System.String _ShortTitle;
        partial void OnShortTitleChanging(global::System.String value);
        partial void OnShortTitleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Director
        {
            get
            {
                return _Director;
            }
            set
            {
                OnDirectorChanging(value);
                ReportPropertyChanging("Director");
                _Director = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Director");
                OnDirectorChanged();
            }
        }
        private global::System.String _Director;
        partial void OnDirectorChanging(global::System.String value);
        partial void OnDirectorChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PFU
        {
            get
            {
                return _PFU;
            }
            set
            {
                OnPFUChanging(value);
                ReportPropertyChanging("PFU");
                _PFU = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PFU");
                OnPFUChanged();
            }
        }
        private global::System.String _PFU;
        partial void OnPFUChanging(global::System.String value);
        partial void OnPFUChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Zarplata
        {
            get
            {
                return _Zarplata;
            }
            set
            {
                OnZarplataChanging(value);
                ReportPropertyChanging("Zarplata");
                _Zarplata = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Zarplata");
                OnZarplataChanged();
            }
        }
        private global::System.String _Zarplata;
        partial void OnZarplataChanging(global::System.String value);
        partial void OnZarplataChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Kind
        {
            get
            {
                return _Kind;
            }
            set
            {
                OnKindChanging(value);
                ReportPropertyChanging("Kind");
                _Kind = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Kind");
                OnKindChanged();
            }
        }
        private global::System.String _Kind;
        partial void OnKindChanging(global::System.String value);
        partial void OnKindChanged();

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="Subdivision_old_load")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Subdivision_old_load : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Subdivision_old_load.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static Subdivision_old_load CreateSubdivision_old_load(global::System.Int32 id)
        {
            Subdivision_old_load subdivision_old_load = new Subdivision_old_load();
            subdivision_old_load.Id = id;
            return subdivision_old_load;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortTitle
        {
            get
            {
                return _ShortTitle;
            }
            set
            {
                OnShortTitleChanging(value);
                ReportPropertyChanging("ShortTitle");
                _ShortTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortTitle");
                OnShortTitleChanged();
            }
        }
        private global::System.String _ShortTitle;
        partial void OnShortTitleChanging(global::System.String value);
        partial void OnShortTitleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FacultyId
        {
            get
            {
                return _FacultyId;
            }
            set
            {
                OnFacultyIdChanging(value);
                ReportPropertyChanging("FacultyId");
                _FacultyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FacultyId");
                OnFacultyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FacultyId;
        partial void OnFacultyIdChanging(Nullable<global::System.Int32> value);
        partial void OnFacultyIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsLab
        {
            get
            {
                return _IsLab;
            }
            set
            {
                OnIsLabChanging(value);
                ReportPropertyChanging("IsLab");
                _IsLab = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLab");
                OnIsLabChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsLab;
        partial void OnIsLabChanging(Nullable<global::System.Boolean> value);
        partial void OnIsLabChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastEditDate
        {
            get
            {
                return _LastEditDate;
            }
            set
            {
                OnLastEditDateChanging(value);
                ReportPropertyChanging("LastEditDate");
                _LastEditDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastEditDate");
                OnLastEditDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastEditDate;
        partial void OnLastEditDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastEditDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Prorector
        {
            get
            {
                return _Prorector;
            }
            set
            {
                OnProrectorChanging(value);
                ReportPropertyChanging("Prorector");
                _Prorector = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Prorector");
                OnProrectorChanged();
            }
        }
        private global::System.String _Prorector;
        partial void OnProrectorChanging(global::System.String value);
        partial void OnProrectorChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FundingSource
        {
            get
            {
                return _FundingSource;
            }
            set
            {
                OnFundingSourceChanging(value);
                ReportPropertyChanging("FundingSource");
                _FundingSource = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FundingSource");
                OnFundingSourceChanged();
            }
        }
        private global::System.String _FundingSource;
        partial void OnFundingSourceChanging(global::System.String value);
        partial void OnFundingSourceChanged();

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="SubDivisionDiscipline")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubDivisionDiscipline : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта SubDivisionDiscipline.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="subDivisionId">Исходное значение свойства SubDivisionId.</param>
        /// <param name="disciplineId">Исходное значение свойства DisciplineId.</param>
        public static SubDivisionDiscipline CreateSubDivisionDiscipline(global::System.Int32 id, global::System.Int32 subDivisionId, global::System.Int32 disciplineId)
        {
            SubDivisionDiscipline subDivisionDiscipline = new SubDivisionDiscipline();
            subDivisionDiscipline.Id = id;
            subDivisionDiscipline.SubDivisionId = subDivisionId;
            subDivisionDiscipline.DisciplineId = disciplineId;
            return subDivisionDiscipline;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubDivisionId
        {
            get
            {
                return _SubDivisionId;
            }
            set
            {
                if (_SubDivisionId != value)
                {
                    OnSubDivisionIdChanging(value);
                    ReportPropertyChanging("SubDivisionId");
                    _SubDivisionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SubDivisionId");
                    OnSubDivisionIdChanged();
                }
            }
        }
        private global::System.Int32 _SubDivisionId;
        partial void OnSubDivisionIdChanging(global::System.Int32 value);
        partial void OnSubDivisionIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisciplineId
        {
            get
            {
                return _DisciplineId;
            }
            set
            {
                OnDisciplineIdChanging(value);
                ReportPropertyChanging("DisciplineId");
                _DisciplineId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisciplineId");
                OnDisciplineIdChanged();
            }
        }
        private global::System.Int32 _DisciplineId;
        partial void OnDisciplineIdChanging(global::System.Int32 value);
        partial void OnDisciplineIdChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_SubDivisionDiscipline_Discipline", "Discipline")]
        public Discipline Discipline
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Discipline>("AudienceModel.FK_SubDivisionDiscipline_Discipline", "Discipline").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Discipline>("AudienceModel.FK_SubDivisionDiscipline_Discipline", "Discipline").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Discipline> DisciplineReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Discipline>("AudienceModel.FK_SubDivisionDiscipline_Discipline", "Discipline");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Discipline>("AudienceModel.FK_SubDivisionDiscipline_Discipline", "Discipline", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="SubGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubGroup : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта SubGroup.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static SubGroup CreateSubGroup(global::System.Int32 id)
        {
            SubGroup subGroup = new SubGroup();
            subGroup.Id = id;
            return subGroup;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private Nullable<global::System.Int32> _GroupId;
        partial void OnGroupIdChanging(Nullable<global::System.Int32> value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Course
        {
            get
            {
                return _Course;
            }
            set
            {
                OnCourseChanging(value);
                ReportPropertyChanging("Course");
                _Course = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Course");
                OnCourseChanged();
            }
        }
        private Nullable<global::System.Int32> _Course;
        partial void OnCourseChanging(Nullable<global::System.Int32> value);
        partial void OnCourseChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_SubGroup_Groups", "Groups")]
        public Groups Groups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Groups>("AudienceModel.FK_SubGroup_Groups", "Groups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Groups>("AudienceModel.FK_SubGroup_Groups", "Groups").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Groups> GroupsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Groups>("AudienceModel.FK_SubGroup_Groups", "Groups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Groups>("AudienceModel.FK_SubGroup_Groups", "Groups", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_TIMETABL_REFERENCE_SUBGROUP", "TimeTable")]
        public EntityCollection<TimeTable> TimeTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimeTable>("AudienceModel.FK_TIMETABL_REFERENCE_SUBGROUP", "TimeTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimeTable>("AudienceModel.FK_TIMETABL_REFERENCE_SUBGROUP", "TimeTable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="sysdiagrams")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagrams : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта sysdiagrams.
        /// </summary>
        /// <param name="name">Исходное значение свойства name.</param>
        /// <param name="principal_id">Исходное значение свойства principal_id.</param>
        /// <param name="diagram_id">Исходное значение свойства diagram_id.</param>
        public static sysdiagrams Createsysdiagrams(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagrams sysdiagrams = new sysdiagrams();
            sysdiagrams.name = name;
            sysdiagrams.principal_id = principal_id;
            sysdiagrams.diagram_id = diagram_id;
            return sysdiagrams;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="TimeTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TimeTable : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта TimeTable.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static TimeTable CreateTimeTable(global::System.Int32 id)
        {
            TimeTable timeTable = new TimeTable();
            timeTable.Id = id;
            return timeTable;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SheduleId
        {
            get
            {
                return _SheduleId;
            }
            set
            {
                OnSheduleIdChanging(value);
                ReportPropertyChanging("SheduleId");
                _SheduleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SheduleId");
                OnSheduleIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SheduleId;
        partial void OnSheduleIdChanging(Nullable<global::System.Int32> value);
        partial void OnSheduleIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WeekNumber
        {
            get
            {
                return _WeekNumber;
            }
            set
            {
                OnWeekNumberChanging(value);
                ReportPropertyChanging("WeekNumber");
                _WeekNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WeekNumber");
                OnWeekNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _WeekNumber;
        partial void OnWeekNumberChanging(Nullable<global::System.Int32> value);
        partial void OnWeekNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WeekDayId
        {
            get
            {
                return _WeekDayId;
            }
            set
            {
                OnWeekDayIdChanging(value);
                ReportPropertyChanging("WeekDayId");
                _WeekDayId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WeekDayId");
                OnWeekDayIdChanged();
            }
        }
        private Nullable<global::System.Int32> _WeekDayId;
        partial void OnWeekDayIdChanging(Nullable<global::System.Int32> value);
        partial void OnWeekDayIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TemeId
        {
            get
            {
                return _TemeId;
            }
            set
            {
                OnTemeIdChanging(value);
                ReportPropertyChanging("TemeId");
                _TemeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TemeId");
                OnTemeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TemeId;
        partial void OnTemeIdChanging(Nullable<global::System.Int32> value);
        partial void OnTemeIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EducationKindId
        {
            get
            {
                return _EducationKindId;
            }
            set
            {
                OnEducationKindIdChanging(value);
                ReportPropertyChanging("EducationKindId");
                _EducationKindId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EducationKindId");
                OnEducationKindIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EducationKindId;
        partial void OnEducationKindIdChanging(Nullable<global::System.Int32> value);
        partial void OnEducationKindIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TutorId
        {
            get
            {
                return _TutorId;
            }
            set
            {
                OnTutorIdChanging(value);
                ReportPropertyChanging("TutorId");
                _TutorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TutorId");
                OnTutorIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TutorId;
        partial void OnTutorIdChanging(Nullable<global::System.Int32> value);
        partial void OnTutorIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StreamId
        {
            get
            {
                return _StreamId;
            }
            set
            {
                OnStreamIdChanging(value);
                ReportPropertyChanging("StreamId");
                _StreamId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StreamId");
                OnStreamIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StreamId;
        partial void OnStreamIdChanging(Nullable<global::System.Int32> value);
        partial void OnStreamIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AudienceId
        {
            get
            {
                return _AudienceId;
            }
            set
            {
                OnAudienceIdChanging(value);
                ReportPropertyChanging("AudienceId");
                _AudienceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AudienceId");
                OnAudienceIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AudienceId;
        partial void OnAudienceIdChanging(Nullable<global::System.Int32> value);
        partial void OnAudienceIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.String _Date;
        partial void OnDateChanging(global::System.String value);
        partial void OnDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DisciplineId
        {
            get
            {
                return _DisciplineId;
            }
            set
            {
                OnDisciplineIdChanging(value);
                ReportPropertyChanging("DisciplineId");
                _DisciplineId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisciplineId");
                OnDisciplineIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DisciplineId;
        partial void OnDisciplineIdChanging(Nullable<global::System.Int32> value);
        partial void OnDisciplineIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AudiencePartNumber
        {
            get
            {
                return _AudiencePartNumber;
            }
            set
            {
                OnAudiencePartNumberChanging(value);
                ReportPropertyChanging("AudiencePartNumber");
                _AudiencePartNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AudiencePartNumber");
                OnAudiencePartNumberChanged();
            }
        }
        private global::System.String _AudiencePartNumber;
        partial void OnAudiencePartNumberChanging(global::System.String value);
        partial void OnAudiencePartNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ScheduleId_
        {
            get
            {
                return _ScheduleId_;
            }
            set
            {
                OnScheduleId_Changing(value);
                ReportPropertyChanging("ScheduleId_");
                _ScheduleId_ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScheduleId_");
                OnScheduleId_Changed();
            }
        }
        private Nullable<global::System.Int32> _ScheduleId_;
        partial void OnScheduleId_Changing(Nullable<global::System.Int32> value);
        partial void OnScheduleId_Changed();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_TIMETABL_REFERENCE_AUDIENCE", "Audience")]
        public Audience Audience
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Audience>("AudienceModel.FK_TIMETABL_REFERENCE_AUDIENCE", "Audience").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Audience>("AudienceModel.FK_TIMETABL_REFERENCE_AUDIENCE", "Audience").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Audience> AudienceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Audience>("AudienceModel.FK_TIMETABL_REFERENCE_AUDIENCE", "Audience");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Audience>("AudienceModel.FK_TIMETABL_REFERENCE_AUDIENCE", "Audience", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_TIMETABL_DISCIPLINE", "Discipline")]
        public Discipline Discipline
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Discipline>("AudienceModel.FK_TIMETABL_DISCIPLINE", "Discipline").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Discipline>("AudienceModel.FK_TIMETABL_DISCIPLINE", "Discipline").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Discipline> DisciplineReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Discipline>("AudienceModel.FK_TIMETABL_DISCIPLINE", "Discipline");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Discipline>("AudienceModel.FK_TIMETABL_DISCIPLINE", "Discipline", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_TIMETABL_REFERENCE_EDUCATIO", "EducationKind")]
        public EducationKind EducationKind
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EducationKind>("AudienceModel.FK_TIMETABL_REFERENCE_EDUCATIO", "EducationKind").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EducationKind>("AudienceModel.FK_TIMETABL_REFERENCE_EDUCATIO", "EducationKind").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EducationKind> EducationKindReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EducationKind>("AudienceModel.FK_TIMETABL_REFERENCE_EDUCATIO", "EducationKind");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EducationKind>("AudienceModel.FK_TIMETABL_REFERENCE_EDUCATIO", "EducationKind", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_TIMETABL_REFERENCE_ETIME", "ETime")]
        public ETime ETime
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ETime>("AudienceModel.FK_TIMETABL_REFERENCE_ETIME", "ETime").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ETime>("AudienceModel.FK_TIMETABL_REFERENCE_ETIME", "ETime").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ETime> ETimeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ETime>("AudienceModel.FK_TIMETABL_REFERENCE_ETIME", "ETime");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ETime>("AudienceModel.FK_TIMETABL_REFERENCE_ETIME", "ETime", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_TIMETABL_REFERENCE_SHEDULE", "Shedule")]
        public Shedule Shedule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Shedule>("AudienceModel.FK_TIMETABL_REFERENCE_SHEDULE", "Shedule").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Shedule>("AudienceModel.FK_TIMETABL_REFERENCE_SHEDULE", "Shedule").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Shedule> SheduleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Shedule>("AudienceModel.FK_TIMETABL_REFERENCE_SHEDULE", "Shedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Shedule>("AudienceModel.FK_TIMETABL_REFERENCE_SHEDULE", "Shedule", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_TIMETABL_REFERENCE_SUBGROUP", "SubGroup")]
        public SubGroup SubGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubGroup>("AudienceModel.FK_TIMETABL_REFERENCE_SUBGROUP", "SubGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubGroup>("AudienceModel.FK_TIMETABL_REFERENCE_SUBGROUP", "SubGroup").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubGroup> SubGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubGroup>("AudienceModel.FK_TIMETABL_REFERENCE_SUBGROUP", "SubGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubGroup>("AudienceModel.FK_TIMETABL_REFERENCE_SUBGROUP", "SubGroup", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_TIMETABL_REFERENCE_TUTOR", "Tutor")]
        public Tutor Tutor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tutor>("AudienceModel.FK_TIMETABL_REFERENCE_TUTOR", "Tutor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tutor>("AudienceModel.FK_TIMETABL_REFERENCE_TUTOR", "Tutor").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tutor> TutorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tutor>("AudienceModel.FK_TIMETABL_REFERENCE_TUTOR", "Tutor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tutor>("AudienceModel.FK_TIMETABL_REFERENCE_TUTOR", "Tutor", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_TIMETABL_REFERENCE_WEEKDAY", "WeekDay")]
        public WeekDay WeekDay
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WeekDay>("AudienceModel.FK_TIMETABL_REFERENCE_WEEKDAY", "WeekDay").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WeekDay>("AudienceModel.FK_TIMETABL_REFERENCE_WEEKDAY", "WeekDay").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WeekDay> WeekDayReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WeekDay>("AudienceModel.FK_TIMETABL_REFERENCE_WEEKDAY", "WeekDay");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WeekDay>("AudienceModel.FK_TIMETABL_REFERENCE_WEEKDAY", "WeekDay", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="Tutor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tutor : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Tutor.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="rankId">Исходное значение свойства RankId.</param>
        public static Tutor CreateTutor(global::System.Int32 id, global::System.Int32 rankId)
        {
            Tutor tutor = new Tutor();
            tutor.Id = id;
            tutor.RankId = rankId;
            return tutor;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubdivisionId
        {
            get
            {
                return _SubdivisionId;
            }
            set
            {
                OnSubdivisionIdChanging(value);
                ReportPropertyChanging("SubdivisionId");
                _SubdivisionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubdivisionId");
                OnSubdivisionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SubdivisionId;
        partial void OnSubdivisionIdChanging(Nullable<global::System.Int32> value);
        partial void OnSubdivisionIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RankId
        {
            get
            {
                return _RankId;
            }
            set
            {
                OnRankIdChanging(value);
                ReportPropertyChanging("RankId");
                _RankId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RankId");
                OnRankIdChanged();
            }
        }
        private global::System.Int32 _RankId;
        partial void OnRankIdChanging(global::System.Int32 value);
        partial void OnRankIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DegreeId
        {
            get
            {
                return _DegreeId;
            }
            set
            {
                OnDegreeIdChanging(value);
                ReportPropertyChanging("DegreeId");
                _DegreeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DegreeId");
                OnDegreeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DegreeId;
        partial void OnDegreeIdChanging(Nullable<global::System.Int32> value);
        partial void OnDegreeIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AppointmentId
        {
            get
            {
                return _AppointmentId;
            }
            set
            {
                OnAppointmentIdChanging(value);
                ReportPropertyChanging("AppointmentId");
                _AppointmentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AppointmentId");
                OnAppointmentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AppointmentId;
        partial void OnAppointmentIdChanging(Nullable<global::System.Int32> value);
        partial void OnAppointmentIdChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_Tutor_new_AcademicRank", "AcademicRank")]
        public AcademicRank AcademicRank
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AcademicRank>("AudienceModel.FK_Tutor_new_AcademicRank", "AcademicRank").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AcademicRank>("AudienceModel.FK_Tutor_new_AcademicRank", "AcademicRank").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AcademicRank> AcademicRankReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AcademicRank>("AudienceModel.FK_Tutor_new_AcademicRank", "AcademicRank");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AcademicRank>("AudienceModel.FK_Tutor_new_AcademicRank", "AcademicRank", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_Tutor_new_Appointment", "Appointment")]
        public Appointment Appointment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Appointment>("AudienceModel.FK_Tutor_new_Appointment", "Appointment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Appointment>("AudienceModel.FK_Tutor_new_Appointment", "Appointment").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Appointment> AppointmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Appointment>("AudienceModel.FK_Tutor_new_Appointment", "Appointment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Appointment>("AudienceModel.FK_Tutor_new_Appointment", "Appointment", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_Tutor_new_Degree", "Degree")]
        public Degree Degree
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Degree>("AudienceModel.FK_Tutor_new_Degree", "Degree").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Degree>("AudienceModel.FK_Tutor_new_Degree", "Degree").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Degree> DegreeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Degree>("AudienceModel.FK_Tutor_new_Degree", "Degree");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Degree>("AudienceModel.FK_Tutor_new_Degree", "Degree", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_Tutor_Subdivision", "Subdivision")]
        public Subdivision Subdivision
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subdivision>("AudienceModel.FK_Tutor_Subdivision", "Subdivision").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subdivision>("AudienceModel.FK_Tutor_Subdivision", "Subdivision").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subdivision> SubdivisionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subdivision>("AudienceModel.FK_Tutor_Subdivision", "Subdivision");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subdivision>("AudienceModel.FK_Tutor_Subdivision", "Subdivision", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_TIMETABL_REFERENCE_TUTOR", "TimeTable")]
        public EntityCollection<TimeTable> TimeTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimeTable>("AudienceModel.FK_TIMETABL_REFERENCE_TUTOR", "TimeTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimeTable>("AudienceModel.FK_TIMETABL_REFERENCE_TUTOR", "TimeTable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="Tutor_old")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tutor_old : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Tutor_old.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static Tutor_old CreateTutor_old(global::System.Int32 id)
        {
            Tutor_old tutor_old = new Tutor_old();
            tutor_old.Id = id;
            return tutor_old;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubdivisionId
        {
            get
            {
                return _SubdivisionId;
            }
            set
            {
                OnSubdivisionIdChanging(value);
                ReportPropertyChanging("SubdivisionId");
                _SubdivisionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubdivisionId");
                OnSubdivisionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SubdivisionId;
        partial void OnSubdivisionIdChanging(Nullable<global::System.Int32> value);
        partial void OnSubdivisionIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Rank
        {
            get
            {
                return _Rank;
            }
            set
            {
                OnRankChanging(value);
                ReportPropertyChanging("Rank");
                _Rank = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Rank");
                OnRankChanged();
            }
        }
        private global::System.String _Rank;
        partial void OnRankChanging(global::System.String value);
        partial void OnRankChanged();

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AudienceModel", Name="WeekDay")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WeekDay : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта WeekDay.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static WeekDay CreateWeekDay(global::System.Int32 id)
        {
            WeekDay weekDay = new WeekDay();
            weekDay.Id = id;
            return weekDay;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AudienceModel", "FK_TIMETABL_REFERENCE_WEEKDAY", "TimeTable")]
        public EntityCollection<TimeTable> TimeTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimeTable>("AudienceModel.FK_TIMETABL_REFERENCE_WEEKDAY", "TimeTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimeTable>("AudienceModel.FK_TIMETABL_REFERENCE_WEEKDAY", "TimeTable", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
